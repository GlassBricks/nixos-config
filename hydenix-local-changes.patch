From a3b140421a12ba4e95d471cdf38369e4a33dd0c4 Mon Sep 17 00:00:00 2001
From: GlassBricks <24237065+GlassBricks@users.noreply.github.com>
Date: Thu, 11 Sep 2025 18:59:51 -0500
Subject: [PATCH] fix: make more independent

---
 flake.nix                                   | 109 ++++++------
 hydenix/modules/hm/comma.nix                |  28 ++-
 hydenix/modules/hm/default.nix              |   5 +-
 hydenix/modules/hm/dolphin.nix              |  14 +-
 hydenix/modules/hm/editors.nix              |  33 ++--
 hydenix/modules/hm/fastfetch.nix            |   7 +-
 hydenix/modules/hm/firefox.nix              |   7 +-
 hydenix/modules/hm/git.nix                  |  13 +-
 hydenix/modules/hm/gtk.nix                  |   7 +-
 hydenix/modules/hm/hyde.nix                 |  10 +-
 hydenix/modules/hm/hyprland/animations.nix  |  56 +++---
 hydenix/modules/hm/hyprland/assertions.nix  |   9 +-
 hydenix/modules/hm/hyprland/default.nix     |  28 ++-
 hydenix/modules/hm/hyprland/hypridle.nix    |  32 ++--
 hydenix/modules/hm/hyprland/keybindings.nix |  32 ++--
 hydenix/modules/hm/hyprland/monitors.nix    |  30 ++--
 hydenix/modules/hm/hyprland/nvidia.nix      |  32 ++--
 hydenix/modules/hm/hyprland/options.nix     |  77 +++++----
 hydenix/modules/hm/hyprland/shaders.nix     |  26 ++-
 hydenix/modules/hm/hyprland/windowrules.nix |  32 ++--
 hydenix/modules/hm/hyprland/workflows.nix   |  50 +++---
 hydenix/modules/hm/lockscreen.nix           |   7 +-
 hydenix/modules/hm/mutable.nix              | 178 ++++++++++----------
 hydenix/modules/hm/notifications.nix        |   7 +-
 hydenix/modules/hm/qt.nix                   |   7 +-
 hydenix/modules/hm/rofi.nix                 |   9 +-
 hydenix/modules/hm/screenshots.nix          |   7 +-
 hydenix/modules/hm/shell.nix                |  48 ++----
 hydenix/modules/hm/social.nix               |   7 +-
 hydenix/modules/hm/spotify.nix              |   3 +-
 hydenix/modules/hm/swww.nix                 |   7 +-
 hydenix/modules/hm/terminals.nix            |  25 ++-
 hydenix/modules/hm/theme.nix                |  35 ++--
 hydenix/modules/hm/waybar.nix               |  15 +-
 hydenix/modules/hm/wlogout.nix              |  10 +-
 hydenix/modules/hm/xdg.nix                  |   8 +-
 hydenix/modules/system/audio.nix            |   7 +-
 hydenix/modules/system/boot.nix             |  60 +++----
 hydenix/modules/system/default.nix          |  11 +-
 hydenix/modules/system/gaming.nix           |   7 +-
 hydenix/modules/system/hardware.nix         |   8 +-
 hydenix/modules/system/network.nix          |   7 +-
 hydenix/modules/system/nix.nix              |   7 +-
 hydenix/modules/system/sddm.nix             |   7 +-
 hydenix/modules/system/system.nix           |  19 +--
 hydenix/sources/Bibata-Modern-Ice.nix       |   3 +-
 hydenix/sources/Tela-circle-dracula.nix     |   3 +-
 hydenix/sources/hyde-gallery.nix            |   6 +-
 hydenix/sources/hyde.nix                    |   5 +-
 hydenix/sources/overlay.nix                 |  19 +--
 hydenix/sources/pokego.nix                  |   1 -
 hydenix/sources/python-pyamdgpuinfo.nix     |   3 +-
 hydenix/sources/themes/AbyssGreen.nix       |   5 +-
 hydenix/sources/themes/Abyssal-Wave.nix     |   5 +-
 hydenix/sources/themes/Amethyst-Aura.nix    |   5 +-
 hydenix/sources/themes/AncientAliens.nix    |   5 +-
 hydenix/sources/themes/Another-World.nix    |   5 +-
 hydenix/sources/themes/Bad-Blood.nix        |   5 +-
 hydenix/sources/themes/BlueSky.nix          |   5 +-
 hydenix/sources/themes/Cat-Latte.nix        |   5 +-
 hydenix/sources/themes/Catppuccin-Latte.nix |   5 +-
 hydenix/sources/themes/Catppuccin-Mocha.nix |   5 +-
 hydenix/sources/themes/Code-Garden.nix      |   5 +-
 hydenix/sources/themes/Cosmic-Blue.nix      |   5 +-
 hydenix/sources/themes/Crimson-Blade.nix    |   5 +-
 hydenix/sources/themes/Crimson-Blue.nix     |   5 +-
 hydenix/sources/themes/Decay-Green.nix      |   5 +-
 hydenix/sources/themes/DoomBringers.nix     |   5 +-
 hydenix/sources/themes/Dracula.nix          |   5 +-
 hydenix/sources/themes/Edge-Runner.nix      |   5 +-
 hydenix/sources/themes/Electra.nix          |   5 +-
 hydenix/sources/themes/Eternal-Arctic.nix   |   5 +-
 hydenix/sources/themes/Ever-Blushing.nix    |   5 +-
 hydenix/sources/themes/Frosted-Glass.nix    |   5 +-
 hydenix/sources/themes/Graphite-Mono.nix    |   5 +-
 hydenix/sources/themes/Green-Lush.nix       |   5 +-
 hydenix/sources/themes/Greenify.nix         |   5 +-
 hydenix/sources/themes/Grukai.nix           |   5 +-
 hydenix/sources/themes/Gruvbox-Retro.nix    |   5 +-
 hydenix/sources/themes/Hack-the-Box.nix     |   5 +-
 hydenix/sources/themes/Ice-Age.nix          |   5 +-
 hydenix/sources/themes/LimeFrenzy.nix       |   5 +-
 hydenix/sources/themes/Mac-OS.nix           |   5 +-
 hydenix/sources/themes/Material-Sakura.nix  |   5 +-
 hydenix/sources/themes/Monokai.nix          |   5 +-
 hydenix/sources/themes/Monterey-Frost.nix   |   5 +-
 hydenix/sources/themes/Moonlight.nix        |   5 +-
 hydenix/sources/themes/Nightbrew.nix        |   5 +-
 hydenix/sources/themes/Nordic-Blue.nix      |   5 +-
 hydenix/sources/themes/Obsidian-Purple.nix  |   5 +-
 hydenix/sources/themes/One-Dark.nix         |   5 +-
 hydenix/sources/themes/Oxo-Carbon.nix       |   5 +-
 hydenix/sources/themes/Paranoid-Sweet.nix   |   5 +-
 hydenix/sources/themes/Peace-Of-Mind.nix    |   5 +-
 hydenix/sources/themes/Pixel-Dream.nix      |   5 +-
 hydenix/sources/themes/Rain-Dark.nix        |   5 +-
 hydenix/sources/themes/Red-Stone.nix        |   5 +-
 hydenix/sources/themes/Rose-Pine.nix        |   5 +-
 hydenix/sources/themes/Scarlet-Night.nix    |   5 +-
 hydenix/sources/themes/Sci-fi.nix           |   5 +-
 hydenix/sources/themes/Solarized-Dark.nix   |   5 +-
 hydenix/sources/themes/Synth-Wave.nix       |   5 +-
 hydenix/sources/themes/Tokyo-Night.nix      |   5 +-
 hydenix/sources/themes/Tundra.nix           |   5 +-
 hydenix/sources/themes/Vanta-Black.nix      |   5 +-
 hydenix/sources/themes/Windows-11.nix       |   5 +-
 hydenix/sources/themes/default.nix          |  10 +-
 hydenix/sources/themes/utils/mkTheme.nix    |  16 +-
 lib/config/configuration.nix                |  29 ++--
 lib/config/default.nix                      |   6 +-
 lib/config/home.nix                         |   5 +-
 lib/dev-shell.nix                           | 112 ++++++------
 lib/hyde-update/default.nix                 |  43 +++--
 lib/vms/demo-vm.nix                         |  11 +-
 lib/vms/nixos-vm.nix                        |  11 +-
 template/configuration.nix                  |  27 ++-
 template/flake.nix                          |  26 ++-
 template/modules/hm/default.nix             |   4 +-
 template/modules/system/default.nix         |   4 +-
 119 files changed, 873 insertions(+), 884 deletions(-)

diff --git a/flake.nix b/flake.nix
index 6bbc7e6..f1a7005 100644
--- a/flake.nix
+++ b/flake.nix
@@ -39,76 +39,73 @@
       url = "github:richen604/hyde-config";
       inputs.nixpkgs.follows = "hydenix-nixpkgs";
     };
-
   };
-  outputs =
-    hydenix-inputs@{ hydenix-nixpkgs, ... }:
-    let
-      system = "x86_64-linux";
-
-      # Create lib attribute that template expects
-      lib = {
-        inherit system;
-        overlays = import ./hydenix/sources/overlay.nix hydenix-inputs;
-        nixOsModules = ./hydenix/modules/system;
-        homeModules = ./hydenix/modules/hm;
-      };
+  outputs = hydenix-inputs @ {hydenix-nixpkgs, ...}: let
+    system = "x86_64-linux";
+
+    # Create lib attribute that template expects
+    lib = {
+      inherit system;
+      overlays = import ./hydenix/sources/overlay.nix hydenix-inputs;
+      nixOsModules = ./hydenix/modules/system;
+      homeModules = ./hydenix/modules/hm;
+    };
 
-      # Internal inputs for building packages and configurations
-      inputs = hydenix-inputs // {
+    # Internal inputs for building packages and configurations
+    inputs =
+      hydenix-inputs
+      // {
         inherit lib;
       };
 
-      defaultConfig = import ./lib/config {
-        inherit inputs;
-      };
-
-      # Create VM variant of the NixOS configuration
-      vmConfig = import ./lib/vms/nixos-vm.nix {
-        nixosConfiguration = defaultConfig;
-        inherit inputs;
-      };
-
-      demoVmConfig = import ./lib/vms/demo-vm.nix {
-        inherit inputs;
-      };
+    defaultConfig = import ./lib/config {
+      inherit inputs;
+    };
 
-    in
-    {
-      # Main API that template uses
-      # Will be depreciated in the next api update
-      inherit lib;
+    # Create VM variant of the NixOS configuration
+    vmConfig = import ./lib/vms/nixos-vm.nix {
+      nixosConfiguration = defaultConfig;
+      inherit inputs;
+    };
 
-      # Direct module access
-      homeModules.default = ./hydenix/modules/hm;
-      nixosModules.default = ./hydenix/modules/system;
+    demoVmConfig = import ./lib/vms/demo-vm.nix {
+      inherit inputs;
+    };
+  in {
+    # Main API that template uses
+    # Will be depreciated in the next api update
+    inherit lib;
 
-      overlays.default = import ./hydenix/sources/overlay.nix hydenix-inputs;
+    # Direct module access
+    homeModules.default = ./hydenix/modules/hm;
+    nixosModules.default = ./hydenix/modules/system;
 
-      templates.default = {
-        path = ./template;
-        description = "Template for hydenix configuration";
-      };
+    overlays.default = import ./hydenix/sources/overlay.nix hydenix-inputs;
 
-      nixosConfigurations.default = defaultConfig;
+    templates.default = {
+      path = ./template;
+      description = "Template for hydenix configuration";
+    };
 
-      packages.${system} = {
-        # Use the VM configuration as default
-        default = vmConfig.config.system.build.vm;
+    nixosConfigurations.default = defaultConfig;
 
-        # WIP: For a future demo installation & usage video
-        demo-vm = demoVmConfig.config.system.build.vm;
+    packages.${system} = {
+      # Use the VM configuration as default
+      default = vmConfig.config.system.build.vm;
 
-        # Helper to manage hyde updates
-        hyde-update = import ./lib/hyde-update { inherit inputs; };
+      # WIP: For a future demo installation & usage video
+      demo-vm = demoVmConfig.config.system.build.vm;
 
-        # Add hyq, hydectl, hyde-ipc, and hyde-config for building
-        hyq = inputs.hyq.packages.${system}.default;
-        hydectl = inputs.hydectl.packages.${system}.default;
-        hyde-ipc = inputs.hyde-ipc.packages.${system}.default;
-        hyde-config = inputs.hyde-config.packages.${system}.default;
-      };
+      # Helper to manage hyde updates
+      hyde-update = import ./lib/hyde-update {inherit inputs;};
 
-      devShells.${system}.default = import ./lib/dev-shell.nix { inherit inputs; };
+      # Add hyq, hydectl, hyde-ipc, and hyde-config for building
+      hyq = inputs.hyq.packages.${system}.default;
+      hydectl = inputs.hydectl.packages.${system}.default;
+      hyde-ipc = inputs.hyde-ipc.packages.${system}.default;
+      hyde-config = inputs.hyde-config.packages.${system}.default;
     };
+
+    devShells.${system}.default = import ./lib/dev-shell.nix {inherit inputs;};
+  };
 }
diff --git a/hydenix/modules/hm/comma.nix b/hydenix/modules/hm/comma.nix
index 5eee9dd..6f6f027 100644
--- a/hydenix/modules/hm/comma.nix
+++ b/hydenix/modules/hm/comma.nix
@@ -4,18 +4,16 @@
   pkgs,
   ...
 }:
-
 /*
-  Comma (,) allows running software without installing it first:
-  , hello # Runs hello from nixpkgs
-  , vim file.txt # Opens file.txt in vim
-  , node --version # Checks node version
-  Uses nix-index database to find and run packages on-demand and wraps in nix shell -c
+Comma (,) allows running software without installing it first:
+, hello # Runs hello from nixpkgs
+, vim file.txt # Opens file.txt in vim
+, node --version # Checks node version
+Uses nix-index database to find and run packages on-demand and wraps in nix shell -c
 */
 let
   cfg = config.hydenix.hm.comma;
-in
-{
+in {
   options.hydenix.hm.comma = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -25,12 +23,12 @@ in
   };
 
   config = lib.mkIf cfg.enable {
-    programs.nix-index-database.comma.enable = true;
-    programs.nix-index = {
-      enable = true;
-      enableZshIntegration = config.hydenix.hm.shell.zsh.enable;
-      enableBashIntegration = config.hydenix.hm.shell.bash.enable;
-      enableFishIntegration = config.hydenix.hm.shell.fish.enable;
-    };
+    # programs.nix-index-database.comma.enable = true;
+    # programs.nix-index = {
+    #   enable = true;
+    #   enableZshIntegration = config.hydenix.hm.shell.zsh.enable;
+    #   enableBashIntegration = config.hydenix.hm.shell.bash.enable;
+    #   enableFishIntegration = config.hydenix.hm.shell.fish.enable;
+    # };
   };
 }
diff --git a/hydenix/modules/hm/default.nix b/hydenix/modules/hm/default.nix
index 331f22d..6005ce8 100644
--- a/hydenix/modules/hm/default.nix
+++ b/hydenix/modules/hm/default.nix
@@ -2,9 +2,7 @@
   config,
   lib,
   ...
-}:
-
-{
+}: {
   imports = [
     ./mutable.nix
     ./comma.nix
@@ -43,5 +41,4 @@
     # let home-manager control itself
     programs.home-manager.enable = true;
   };
-
 }
diff --git a/hydenix/modules/hm/dolphin.nix b/hydenix/modules/hm/dolphin.nix
index 9798b1e..3f7e4f4 100644
--- a/hydenix/modules/hm/dolphin.nix
+++ b/hydenix/modules/hm/dolphin.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.dolphin;
-in
-{
+in {
   options.hydenix.hm.dolphin = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -18,7 +15,6 @@ in
   };
 
   config = lib.mkIf cfg.enable {
-
     #! we are using libsForQt5 because dolphin likes to break things like icons on qt6
     home.packages = with pkgs.kdePackages; [
       dolphin # KDE file manager
@@ -35,9 +31,9 @@ in
 
     xdg.mimeApps = {
       defaultApplications = {
-        "inode/directory" = [ "org.kde.dolphin.desktop" ];
-        "x-scheme-handler/file" = [ "org.kde.dolphin.desktop" ];
-        "x-scheme-handler/about" = [ "org.kde.dolphin.desktop" ];
+        "inode/directory" = ["org.kde.dolphin.desktop"];
+        "x-scheme-handler/file" = ["org.kde.dolphin.desktop"];
+        "x-scheme-handler/about" = ["org.kde.dolphin.desktop"];
       };
     };
 
diff --git a/hydenix/modules/hm/editors.nix b/hydenix/modules/hm/editors.nix
index c2928a7..79b801e 100644
--- a/hydenix/modules/hm/editors.nix
+++ b/hydenix/modules/hm/editors.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.editors;
-in
-{
+in {
   options.hydenix.hm.editors = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -63,19 +60,19 @@ in
 
     xdg.mimeApps = {
       defaultApplications = {
-        "text/plain" = [ "${cfg.default}.desktop" ];
-        "application/x-shellscript" = [ "${cfg.default}.desktop" ];
-        "text/css" = [ "${cfg.default}.desktop" ];
-        "application/javascript" = [ "${cfg.default}.desktop" ];
-        "application/json" = [ "${cfg.default}.desktop" ];
-        "application/xml" = [ "${cfg.default}.desktop" ];
-        "text/x-python" = [ "${cfg.default}.desktop" ];
-        "text/x-java-source" = [ "${cfg.default}.desktop" ];
-        "text/x-c++src" = [ "${cfg.default}.desktop" ];
-        "text/x-csrc" = [ "${cfg.default}.desktop" ];
-        "text/x-go" = [ "${cfg.default}.desktop" ];
-        "text/x-typescript" = [ "${cfg.default}.desktop" ];
-        "text/markdown" = [ "${cfg.default}.desktop" ];
+        "text/plain" = ["${cfg.default}.desktop"];
+        "application/x-shellscript" = ["${cfg.default}.desktop"];
+        "text/css" = ["${cfg.default}.desktop"];
+        "application/javascript" = ["${cfg.default}.desktop"];
+        "application/json" = ["${cfg.default}.desktop"];
+        "application/xml" = ["${cfg.default}.desktop"];
+        "text/x-python" = ["${cfg.default}.desktop"];
+        "text/x-java-source" = ["${cfg.default}.desktop"];
+        "text/x-c++src" = ["${cfg.default}.desktop"];
+        "text/x-csrc" = ["${cfg.default}.desktop"];
+        "text/x-go" = ["${cfg.default}.desktop"];
+        "text/x-typescript" = ["${cfg.default}.desktop"];
+        "text/markdown" = ["${cfg.default}.desktop"];
       };
     };
 
diff --git a/hydenix/modules/hm/fastfetch.nix b/hydenix/modules/hm/fastfetch.nix
index 7630dd8..05b8347 100644
--- a/hydenix/modules/hm/fastfetch.nix
+++ b/hydenix/modules/hm/fastfetch.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.fastfetch;
-in
-{
+in {
   options.hydenix.hm.fastfetch = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/hm/firefox.nix b/hydenix/modules/hm/firefox.nix
index 2af09b6..faf998a 100644
--- a/hydenix/modules/hm/firefox.nix
+++ b/hydenix/modules/hm/firefox.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.firefox;
-in
-{
+in {
   options.hydenix.hm.firefox = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/hm/git.nix b/hydenix/modules/hm/git.nix
index 7291d3c..a96135f 100644
--- a/hydenix/modules/hm/git.nix
+++ b/hydenix/modules/hm/git.nix
@@ -1,10 +1,10 @@
-{ lib, config, ... }:
-
-let
-  cfg = config.hydenix.hm.git;
-in
 {
-
+  lib,
+  config,
+  ...
+}: let
+  cfg = config.hydenix.hm.git;
+in {
   options.hydenix.hm.git = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -26,7 +26,6 @@ in
   };
 
   config = lib.mkIf cfg.enable {
-
     programs.git = {
       enable = true;
       userName = cfg.name;
diff --git a/hydenix/modules/hm/gtk.nix b/hydenix/modules/hm/gtk.nix
index 81be3f1..5df8f2d 100644
--- a/hydenix/modules/hm/gtk.nix
+++ b/hydenix/modules/hm/gtk.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.gtk;
-in
-{
+in {
   options.hydenix.hm.gtk = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/hm/hyde.nix b/hydenix/modules/hm/hyde.nix
index 9993a1a..d2f6dc1 100644
--- a/hydenix/modules/hm/hyde.nix
+++ b/hydenix/modules/hm/hyde.nix
@@ -3,13 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyde;
-in
-{
-
+in {
   options.hydenix.hm.hyde = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -31,7 +27,7 @@ in
     fonts.fontconfig.enable = true;
 
     # fixes cava from not initializing on boot
-    home.activation.createCavaConfig = lib.hm.dag.entryAfter [ "mutableGeneration" ] ''
+    home.activation.createCavaConfig = lib.hm.dag.entryAfter ["mutableGeneration"] ''
       mkdir -p "$HOME/.config/cava"
       touch "$HOME/.config/cava/config"
       chmod 644 "$HOME/.config/cava/config"
diff --git a/hydenix/modules/hm/hyprland/animations.nix b/hydenix/modules/hm/hyprland/animations.nix
index 1b00875..93d80a7 100644
--- a/hydenix/modules/hm/hyprland/animations.nix
+++ b/hydenix/modules/hm/hyprland/animations.nix
@@ -3,9 +3,7 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyprland;
 
   animationPresets = [
@@ -28,28 +26,26 @@ let
     "standard"
     "vertical"
   ];
-in
-{
+in {
   config = lib.mkIf (cfg.enable && cfg.animations.enable) {
     home.file = lib.mkMerge [
       # Active animation preset
       {
         ".config/hypr/animations.conf" =
-          if cfg.animations.overrides ? ${cfg.animations.preset} then
-            {
-              text = ''
-                ${cfg.animations.overrides.${cfg.animations.preset}}
-                ${cfg.animations.extraConfig}
-              '';
-              force = true;
-              mutable = true;
-            }
-          else
-            {
-              source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/animations/${cfg.animations.preset}.conf";
-              force = true;
-              mutable = true;
-            };
+          if cfg.animations.overrides ? ${cfg.animations.preset}
+          then {
+            text = ''
+              ${cfg.animations.overrides.${cfg.animations.preset}}
+              ${cfg.animations.extraConfig}
+            '';
+            force = true;
+            mutable = true;
+          }
+          else {
+            source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/animations/${cfg.animations.preset}.conf";
+            force = true;
+            mutable = true;
+          };
       }
 
       # All animation presets (with overrides)
@@ -57,16 +53,16 @@ in
         map (preset: {
           name = ".config/hypr/animations/${preset}.conf";
           value =
-            if cfg.animations.overrides ? ${preset} then
-              {
-                text = cfg.animations.overrides.${preset};
-                force = true;
-              }
-            else
-              {
-                source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/animations/${preset}.conf";
-              };
-        }) animationPresets
+            if cfg.animations.overrides ? ${preset}
+            then {
+              text = cfg.animations.overrides.${preset};
+              force = true;
+            }
+            else {
+              source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/animations/${preset}.conf";
+            };
+        })
+        animationPresets
       ))
     ];
   };
diff --git a/hydenix/modules/hm/hyprland/assertions.nix b/hydenix/modules/hm/hyprland/assertions.nix
index 6c193a0..f6ee846 100644
--- a/hydenix/modules/hm/hyprland/assertions.nix
+++ b/hydenix/modules/hm/hyprland/assertions.nix
@@ -2,9 +2,7 @@
   config,
   lib,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyprland;
 
   # Collect all active overrides
@@ -16,8 +14,7 @@ let
     (lib.optionalString (cfg.monitors.overrideConfig != null) "monitors.overrideConfig")
     (lib.optionalString (cfg.overrideMain != null) "overrideMain")
   ];
-in
-{
+in {
   config = lib.mkIf cfg.enable {
     assertions = [
       {
@@ -46,7 +43,7 @@ in
       }
     ];
 
-    warnings = lib.optionals (cfg.enable && activeOverrides != [ ] && !cfg.suppressWarnings) [
+    warnings = lib.optionals (cfg.enable && activeOverrides != [] && !cfg.suppressWarnings) [
       "hydenix.hm.hyprland: The following configs are overriding Hyde defaults. Note this may break hydenix, hope you know what you're doing! (set suppressWarnings = true to hide this warning): ${lib.concatStringsSep ", " activeOverrides}"
     ];
   };
diff --git a/hydenix/modules/hm/hyprland/default.nix b/hydenix/modules/hm/hyprland/default.nix
index 4800804..2851ab6 100644
--- a/hydenix/modules/hm/hyprland/default.nix
+++ b/hydenix/modules/hm/hyprland/default.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyprland;
-in
-{
+in {
   imports = [
     ./options.nix
     ./assertions.nix
@@ -30,7 +27,7 @@ in
       pkgs.hyprcursor
     ];
 
-    home.activation.createHyprConfigs = lib.hm.dag.entryAfter [ "mutableGeneration" ] ''
+    home.activation.createHyprConfigs = lib.hm.dag.entryAfter ["mutableGeneration"] ''
       mkdir -p "$HOME/.config/hypr/animations"
       mkdir -p "$HOME/.config/hypr/themes"
       mkdir -p "$HOME/.config/hypr/shaders"
@@ -49,16 +46,15 @@ in
 
     home.file = {
       ".config/hypr/hyprland.conf" =
-        if cfg.overrideMain != null then
-          {
-            text = cfg.overrideMain;
-            force = true;
-          }
-        else
-          {
-            source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/hyprland.conf";
-            force = true;
-          };
+        if cfg.overrideMain != null
+        then {
+          text = cfg.overrideMain;
+          force = true;
+        }
+        else {
+          source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/hyprland.conf";
+          force = true;
+        };
 
       ".config/hypr/hyde.conf".source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/hyde.conf";
 
diff --git a/hydenix/modules/hm/hyprland/hypridle.nix b/hydenix/modules/hm/hyprland/hypridle.nix
index b80b405..97a72c3 100644
--- a/hydenix/modules/hm/hyprland/hypridle.nix
+++ b/hydenix/modules/hm/hyprland/hypridle.nix
@@ -3,28 +3,24 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyprland;
-in
-{
+in {
   config = lib.mkIf (cfg.enable && cfg.hypridle.enable) {
     home.file = {
       ".config/hypr/hypridle.conf" =
-        if cfg.hypridle.overrideConfig != null then
-          {
-            text = cfg.hypridle.overrideConfig;
-            force = true;
-          }
-        else
-          {
-            text = ''
-              ${lib.readFile "${pkgs.hydenix.hyde}/Configs/.config/hypr/hypridle.conf"}
-              ${cfg.hypridle.extraConfig}
-            '';
-            force = true;
-          };
+        if cfg.hypridle.overrideConfig != null
+        then {
+          text = cfg.hypridle.overrideConfig;
+          force = true;
+        }
+        else {
+          text = ''
+            ${lib.readFile "${pkgs.hydenix.hyde}/Configs/.config/hypr/hypridle.conf"}
+            ${cfg.hypridle.extraConfig}
+          '';
+          force = true;
+        };
     };
   };
 }
diff --git a/hydenix/modules/hm/hyprland/keybindings.nix b/hydenix/modules/hm/hyprland/keybindings.nix
index dfe5f7d..b7793d0 100644
--- a/hydenix/modules/hm/hyprland/keybindings.nix
+++ b/hydenix/modules/hm/hyprland/keybindings.nix
@@ -3,28 +3,24 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyprland;
-in
-{
+in {
   config = lib.mkIf (cfg.enable && cfg.keybindings.enable) {
     home.file = {
       ".config/hypr/keybindings.conf" =
-        if cfg.keybindings.overrideConfig != null then
-          {
-            text = cfg.keybindings.overrideConfig;
-            force = true;
-          }
-        else
-          {
-            text = ''
-              ${lib.readFile "${pkgs.hydenix.hyde}/Configs/.config/hypr/keybindings.conf"}
-              ${cfg.keybindings.extraConfig}
-            '';
-            force = true;
-          };
+        if cfg.keybindings.overrideConfig != null
+        then {
+          text = cfg.keybindings.overrideConfig;
+          force = true;
+        }
+        else {
+          text = ''
+            ${lib.readFile "${pkgs.hydenix.hyde}/Configs/.config/hypr/keybindings.conf"}
+            ${cfg.keybindings.extraConfig}
+          '';
+          force = true;
+        };
     };
   };
 }
diff --git a/hydenix/modules/hm/hyprland/monitors.nix b/hydenix/modules/hm/hyprland/monitors.nix
index 7bd962f..b3b51ce 100644
--- a/hydenix/modules/hm/hyprland/monitors.nix
+++ b/hydenix/modules/hm/hyprland/monitors.nix
@@ -3,27 +3,23 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyprland;
-in
-{
+in {
   config = lib.mkIf (cfg.enable && cfg.monitors.enable) {
     home.file = {
       ".config/hypr/monitors.conf" =
-        if cfg.monitors.overrideConfig != null then
-          {
-            text = cfg.monitors.overrideConfig;
-            force = true;
-            mutable = true;
-          }
-        else
-          {
-            source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/monitors.conf";
-            force = true;
-            mutable = true;
-          };
+        if cfg.monitors.overrideConfig != null
+        then {
+          text = cfg.monitors.overrideConfig;
+          force = true;
+          mutable = true;
+        }
+        else {
+          source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/monitors.conf";
+          force = true;
+          mutable = true;
+        };
     };
   };
 }
diff --git a/hydenix/modules/hm/hyprland/nvidia.nix b/hydenix/modules/hm/hyprland/nvidia.nix
index 11842ac..65be8da 100644
--- a/hydenix/modules/hm/hyprland/nvidia.nix
+++ b/hydenix/modules/hm/hyprland/nvidia.nix
@@ -3,28 +3,24 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyprland;
-in
-{
+in {
   config = lib.mkIf (cfg.enable && cfg.nvidia.enable) {
     home.file = {
       ".config/hypr/nvidia.conf" =
-        if cfg.nvidia.overrideConfig != null then
-          {
-            text = cfg.nvidia.overrideConfig;
-            force = true;
-          }
-        else
-          {
-            text = ''
-              ${lib.readFile "${pkgs.hydenix.hyde}/Configs/.config/hypr/nvidia.conf"}
-              ${cfg.nvidia.extraConfig}
-            '';
-            force = true;
-          };
+        if cfg.nvidia.overrideConfig != null
+        then {
+          text = cfg.nvidia.overrideConfig;
+          force = true;
+        }
+        else {
+          text = ''
+            ${lib.readFile "${pkgs.hydenix.hyde}/Configs/.config/hypr/nvidia.conf"}
+            ${cfg.nvidia.extraConfig}
+          '';
+          force = true;
+        };
     };
   };
 }
diff --git a/hydenix/modules/hm/hyprland/options.nix b/hydenix/modules/hm/hyprland/options.nix
index e1dd5b9..209d0ec 100644
--- a/hydenix/modules/hm/hyprland/options.nix
+++ b/hydenix/modules/hm/hyprland/options.nix
@@ -2,12 +2,9 @@
   config,
   lib,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyprland;
-in
-{
+in {
   options.hydenix.hm.hyprland = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -32,9 +29,11 @@ in
 
     # Animation configurations
     animations = {
-      enable = lib.mkEnableOption "animation configurations" // {
-        default = cfg.enable;
-      };
+      enable =
+        lib.mkEnableOption "animation configurations"
+        // {
+          default = cfg.enable;
+        };
       preset = lib.mkOption {
         type = lib.types.str;
         default = "standard";
@@ -50,7 +49,7 @@ in
       };
       overrides = lib.mkOption {
         type = lib.types.attrsOf lib.types.lines;
-        default = { };
+        default = {};
         description = "Override specific animation files by name";
         example = lib.literalExpression ''
           {
@@ -64,9 +63,11 @@ in
 
     # Shader configurations
     shaders = {
-      enable = lib.mkEnableOption "shader configurations" // {
-        default = cfg.enable;
-      };
+      enable =
+        lib.mkEnableOption "shader configurations"
+        // {
+          default = cfg.enable;
+        };
       active = lib.mkOption {
         type = lib.types.str;
         default = "disable";
@@ -77,7 +78,7 @@ in
       };
       overrides = lib.mkOption {
         type = lib.types.attrsOf lib.types.lines;
-        default = { };
+        default = {};
         description = "Override or add custom shaders";
         example = lib.literalExpression ''
           {
@@ -92,9 +93,11 @@ in
 
     # Workflow configurations
     workflows = {
-      enable = lib.mkEnableOption "workflow configurations" // {
-        default = cfg.enable;
-      };
+      enable =
+        lib.mkEnableOption "workflow configurations"
+        // {
+          default = cfg.enable;
+        };
       active = lib.mkOption {
         type = lib.types.str;
         default = "default";
@@ -105,7 +108,7 @@ in
       };
       overrides = lib.mkOption {
         type = lib.types.attrsOf lib.types.lines;
-        default = { };
+        default = {};
         description = "Override or add custom workflows";
         example = lib.literalExpression ''
           {
@@ -119,9 +122,11 @@ in
 
     # Hypridle configurations
     hypridle = {
-      enable = lib.mkEnableOption "hypridle configurations" // {
-        default = cfg.enable;
-      };
+      enable =
+        lib.mkEnableOption "hypridle configurations"
+        // {
+          default = cfg.enable;
+        };
       extraConfig = lib.mkOption {
         type = lib.types.lines;
         default = "";
@@ -136,9 +141,11 @@ in
 
     # Keybindings configurations
     keybindings = {
-      enable = lib.mkEnableOption "keybindings configurations" // {
-        default = cfg.enable;
-      };
+      enable =
+        lib.mkEnableOption "keybindings configurations"
+        // {
+          default = cfg.enable;
+        };
       extraConfig = lib.mkOption {
         type = lib.types.lines;
         default = "";
@@ -153,9 +160,11 @@ in
 
     # Window rules configurations
     windowrules = {
-      enable = lib.mkEnableOption "window rules configurations" // {
-        default = cfg.enable;
-      };
+      enable =
+        lib.mkEnableOption "window rules configurations"
+        // {
+          default = cfg.enable;
+        };
       extraConfig = lib.mkOption {
         type = lib.types.lines;
         default = "";
@@ -170,9 +179,11 @@ in
 
     # NVIDIA configurations
     nvidia = {
-      enable = lib.mkEnableOption "NVIDIA configurations" // {
-        default = config.hardware.nvidia.enabled or false;
-      };
+      enable =
+        lib.mkEnableOption "NVIDIA configurations"
+        // {
+          default = config.hardware.nvidia.enabled or false;
+        };
       extraConfig = lib.mkOption {
         type = lib.types.lines;
         default = "";
@@ -187,9 +198,11 @@ in
 
     # Monitor configurations
     monitors = {
-      enable = lib.mkEnableOption "monitor configurations" // {
-        default = cfg.enable;
-      };
+      enable =
+        lib.mkEnableOption "monitor configurations"
+        // {
+          default = cfg.enable;
+        };
       overrideConfig = lib.mkOption {
         type = lib.types.nullOr lib.types.lines;
         default = null;
diff --git a/hydenix/modules/hm/hyprland/shaders.nix b/hydenix/modules/hm/hyprland/shaders.nix
index 2dd877c..44acb4c 100644
--- a/hydenix/modules/hm/hyprland/shaders.nix
+++ b/hydenix/modules/hm/hyprland/shaders.nix
@@ -3,9 +3,7 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyprland;
 
   standardShaders = [
@@ -21,8 +19,7 @@ let
     "vibrance"
     "wallbash"
   ];
-in
-{
+in {
   config = lib.mkIf (cfg.enable && cfg.shaders.enable) {
     home.file = lib.mkMerge [
       # Standard shaders (generated from list)
@@ -34,7 +31,8 @@ in
             value = {
               source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/shaders/${shader}.frag";
             };
-          }) standardShaders
+          })
+          standardShaders
         ))
 
         # Additional shader files
@@ -56,19 +54,19 @@ in
             force = true;
             mutable = true;
           };
-          ".config/hypr/shaders/wallbash.inc".source =
-            "${pkgs.hydenix.hyde}/Configs/.config/hypr/shaders/wallbash.inc";
+          ".config/hypr/shaders/wallbash.inc".source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/shaders/wallbash.inc";
         }
       ])
 
       # Custom/override shaders
       (lib.mapAttrs' (name: content: {
-        name = ".config/hypr/shaders/${name}";
-        value = {
-          text = content;
-          force = true;
-        };
-      }) cfg.shaders.overrides)
+          name = ".config/hypr/shaders/${name}";
+          value = {
+            text = content;
+            force = true;
+          };
+        })
+        cfg.shaders.overrides)
     ];
   };
 }
diff --git a/hydenix/modules/hm/hyprland/windowrules.nix b/hydenix/modules/hm/hyprland/windowrules.nix
index 889ba05..9d5acd3 100644
--- a/hydenix/modules/hm/hyprland/windowrules.nix
+++ b/hydenix/modules/hm/hyprland/windowrules.nix
@@ -3,28 +3,24 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyprland;
-in
-{
+in {
   config = lib.mkIf (cfg.enable && cfg.windowrules.enable) {
     home.file = {
       ".config/hypr/windowrules.conf" =
-        if cfg.windowrules.overrideConfig != null then
-          {
-            text = cfg.windowrules.overrideConfig;
-            force = true;
-          }
-        else
-          {
-            text = ''
-              ${lib.readFile "${pkgs.hydenix.hyde}/Configs/.config/hypr/windowrules.conf"}
-              ${cfg.windowrules.extraConfig}
-            '';
-            force = true;
-          };
+        if cfg.windowrules.overrideConfig != null
+        then {
+          text = cfg.windowrules.overrideConfig;
+          force = true;
+        }
+        else {
+          text = ''
+            ${lib.readFile "${pkgs.hydenix.hyde}/Configs/.config/hypr/windowrules.conf"}
+            ${cfg.windowrules.extraConfig}
+          '';
+          force = true;
+        };
     };
   };
 }
diff --git a/hydenix/modules/hm/hyprland/workflows.nix b/hydenix/modules/hm/hyprland/workflows.nix
index 241bb93..ab2b582 100644
--- a/hydenix/modules/hm/hyprland/workflows.nix
+++ b/hydenix/modules/hm/hyprland/workflows.nix
@@ -3,9 +3,7 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.hyprland;
 
   workflowPresets = [
@@ -15,25 +13,23 @@ let
     "powersaver"
     "snappy"
   ];
-in
-{
+in {
   config = lib.mkIf (cfg.enable && cfg.workflows.enable) {
     home.file = lib.mkMerge [
       # Active workflow
       {
         ".config/hypr/workflows.conf" =
-          if cfg.workflows.overrides ? ${cfg.workflows.active} then
-            {
-              text = cfg.workflows.overrides.${cfg.workflows.active};
-              force = true;
-              mutable = true;
-            }
-          else
-            {
-              source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/workflows/${cfg.workflows.active}.conf";
-              force = true;
-              mutable = true;
-            };
+          if cfg.workflows.overrides ? ${cfg.workflows.active}
+          then {
+            text = cfg.workflows.overrides.${cfg.workflows.active};
+            force = true;
+            mutable = true;
+          }
+          else {
+            source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/workflows/${cfg.workflows.active}.conf";
+            force = true;
+            mutable = true;
+          };
       }
 
       # All workflow presets (with overrides)
@@ -41,16 +37,16 @@ in
         map (workflow: {
           name = ".config/hypr/workflows/${workflow}.conf";
           value =
-            if cfg.workflows.overrides ? ${workflow} then
-              {
-                text = cfg.workflows.overrides.${workflow};
-                force = true;
-              }
-            else
-              {
-                source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/workflows/${workflow}.conf";
-              };
-        }) workflowPresets
+            if cfg.workflows.overrides ? ${workflow}
+            then {
+              text = cfg.workflows.overrides.${workflow};
+              force = true;
+            }
+            else {
+              source = "${pkgs.hydenix.hyde}/Configs/.config/hypr/workflows/${workflow}.conf";
+            };
+        })
+        workflowPresets
       ))
 
       # Custom workflows (exclude the standard presets)
diff --git a/hydenix/modules/hm/lockscreen.nix b/hydenix/modules/hm/lockscreen.nix
index ced4393..06fd357 100644
--- a/hydenix/modules/hm/lockscreen.nix
+++ b/hydenix/modules/hm/lockscreen.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.lockscreen;
-in
-{
+in {
   options.hydenix.hm.lockscreen = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/hm/mutable.nix b/hydenix/modules/hm/mutable.nix
index e0b8290..66a6d52 100644
--- a/hydenix/modules/hm/mutable.nix
+++ b/hydenix/modules/hm/mutable.nix
@@ -4,8 +4,7 @@
   lib,
   pkgs,
   ...
-}:
-let
+}: let
   fileOptionAttrPaths = [
     [
       "home"
@@ -20,39 +19,35 @@ let
       "dataFile"
     ]
   ];
-in
-{
-  options =
-    let
-
-      mergeAttrsList = builtins.foldl' (lib.mergeAttrs) { };
-
-      fileAttrsType = lib.types.attrsOf (
-        lib.types.submodule (
-          { config, ... }:
-          {
-            options.mutable = lib.mkOption {
-              type = lib.types.bool;
-              default = false;
-              description = ''
-                Whether to copy the file without the read-only attribute instead of
-                symlinking. If you set this to `true`, you must also set `force` to
-                `true`. Mutable files are not removed when you remove them from your
-                configuration.
+in {
+  options = let
+    mergeAttrsList = builtins.foldl' (lib.mergeAttrs) {};
 
-                This option is useful for programs that don't have a very good
-                support for read-only configurations.
-              '';
-            };
-          }
-        )
-      );
+    fileAttrsType = lib.types.attrsOf (
+      lib.types.submodule (
+        {config, ...}: {
+          options.mutable = lib.mkOption {
+            type = lib.types.bool;
+            default = false;
+            description = ''
+              Whether to copy the file without the read-only attribute instead of
+              symlinking. If you set this to `true`, you must also set `force` to
+              `true`. Mutable files are not removed when you remove them from your
+              configuration.
 
-    in
+              This option is useful for programs that don't have a very good
+              support for read-only configurations.
+            '';
+          };
+        }
+      )
+    );
+  in
     mergeAttrsList (
       map (
-        attrPath: lib.setAttrByPath attrPath (lib.mkOption { type = fileAttrsType; })
-      ) fileOptionAttrPaths
+        attrPath: lib.setAttrByPath attrPath (lib.mkOption {type = fileAttrsType;})
+      )
+      fileOptionAttrPaths
     );
 
   config = {
@@ -61,77 +56,74 @@ in
       findutils
     ];
 
-    home.activation.mutableFileGeneration =
-      let
-
-        allFiles = (
-          builtins.concatLists (
-            map (attrPath: builtins.attrValues (lib.getAttrFromPath attrPath config)) fileOptionAttrPaths
-          )
-        );
+    home.activation.mutableFileGeneration = let
+      allFiles = (
+        builtins.concatLists (
+          map (attrPath: builtins.attrValues (lib.getAttrFromPath attrPath config)) fileOptionAttrPaths
+        )
+      );
 
-        filterMutableFiles = builtins.filter (
-          file:
+      filterMutableFiles = builtins.filter (
+        file:
           (file.mutable or false)
           && lib.assertMsg file.force "if you specify `mutable` to `true` on a file, you must also set `force` to `true`"
-        );
+      );
 
-        mutableFiles = filterMutableFiles allFiles;
+      mutableFiles = filterMutableFiles allFiles;
 
-        toCommand = (
-          file:
-          let
-            source = lib.escapeShellArg file.source;
-            target = lib.escapeShellArg file.target;
-            recursiveFlag = if (file.recursive or false) then "-r" else "";
-          in
-          ''
-            $VERBOSE_ECHO "Copying mutable file: ${source} -> ${target}"
+      toCommand = (
+        file: let
+          source = lib.escapeShellArg file.source;
+          target = lib.escapeShellArg file.target;
+          recursiveFlag =
+            if (file.recursive or false)
+            then "-r"
+            else "";
+        in ''
+          $VERBOSE_ECHO "Copying mutable file: ${source} -> ${target}"
 
-            if [ -n "${recursiveFlag}" ]; then
-              $DRY_RUN_CMD cp -r --remove-destination --no-preserve=mode ${source}/. ${target} || {
-                echo "Error: Failed to copy recursive directory ${source} to ${target}"
-                exit 1
-              }
-            else
-              $DRY_RUN_CMD cp --remove-destination --no-preserve=mode ${source} ${target} || {
-                echo "Error: Failed to copy file ${source} to ${target}"
+          if [ -n "${recursiveFlag}" ]; then
+            $DRY_RUN_CMD cp -r --remove-destination --no-preserve=mode ${source}/. ${target} || {
+              echo "Error: Failed to copy recursive directory ${source} to ${target}"
+              exit 1
+            }
+          else
+            $DRY_RUN_CMD cp --remove-destination --no-preserve=mode ${source} ${target} || {
+              echo "Error: Failed to copy file ${source} to ${target}"
+              exit 1
+            }
+          fi
+
+          if [ -d ${target} ]; then
+            find ${target} -type f -exec sh -c '
+              for f do
+                type=$(${pkgs.file}/bin/file -b "$f")
+                if echo "$type" | grep -qE "executable|script" || [[ "$f" =~ \.sh$ ]]; then
+                  $DRY_RUN_CMD chmod u+wx "$f" || {
+                    echo "Error: Failed to set permissions on $f"
+                    exit 1
+                  }
+                fi
+              done
+            ' sh {} +
+          else
+            type=$(${pkgs.file}/bin/file -b ${target})
+            if echo "$type" | grep -qE "executable|script" || [[ ${target} =~ \.sh$ ]]; then
+              $DRY_RUN_CMD chmod u+wx ${target} || {
+                echo "Error: Failed to set permissions on ${target}"
                 exit 1
               }
             fi
+          fi
+        ''
+      );
 
-            if [ -d ${target} ]; then
-              find ${target} -type f -exec sh -c '
-                for f do
-                  type=$(${pkgs.file}/bin/file -b "$f")
-                  if echo "$type" | grep -qE "executable|script" || [[ "$f" =~ \.sh$ ]]; then
-                    $DRY_RUN_CMD chmod u+wx "$f" || {
-                      echo "Error: Failed to set permissions on $f"
-                      exit 1
-                    }
-                  fi
-                done
-              ' sh {} +
-            else
-              type=$(${pkgs.file}/bin/file -b ${target})
-              if echo "$type" | grep -qE "executable|script" || [[ ${target} =~ \.sh$ ]]; then
-                $DRY_RUN_CMD chmod u+wx ${target} || {
-                  echo "Error: Failed to set permissions on ${target}"
-                  exit 1
-                }
-              fi
-            fi
-          ''
-        );
-
-        command =
-          ''
-            export PATH="${pkgs.file}/bin:${pkgs.findutils}/bin:$PATH"
-            echo "Copying mutable home files for $HOME"
-          ''
-          + lib.concatLines (map toCommand mutableFiles);
-
-      in
-      (lib.hm.dag.entryAfter [ "linkGeneration" ] command);
+      command =
+        ''
+          export PATH="${pkgs.file}/bin:${pkgs.findutils}/bin:$PATH"
+          echo "Copying mutable home files for $HOME"
+        ''
+        + lib.concatLines (map toCommand mutableFiles);
+    in (lib.hm.dag.entryAfter ["linkGeneration"] command);
   };
 }
diff --git a/hydenix/modules/hm/notifications.nix b/hydenix/modules/hm/notifications.nix
index 6083cc7..43b310b 100644
--- a/hydenix/modules/hm/notifications.nix
+++ b/hydenix/modules/hm/notifications.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.notifications;
-in
-{
+in {
   options.hydenix.hm.notifications = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/hm/qt.nix b/hydenix/modules/hm/qt.nix
index 8d97d59..9a54988 100644
--- a/hydenix/modules/hm/qt.nix
+++ b/hydenix/modules/hm/qt.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.qt;
-in
-{
+in {
   options.hydenix.hm.qt = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/hm/rofi.nix b/hydenix/modules/hm/rofi.nix
index 80db7dd..a66453e 100644
--- a/hydenix/modules/hm/rofi.nix
+++ b/hydenix/modules/hm/rofi.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.rofi;
-in
-{
+in {
   options.hydenix.hm.rofi = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -32,7 +29,7 @@ in
       };
     };
 
-    home.activation.hydeRofiThemes = lib.hm.dag.entryAfter [ "writeBoundary" ] ''
+    home.activation.hydeRofiThemes = lib.hm.dag.entryAfter ["writeBoundary"] ''
       $DRY_RUN_CMD mkdir -p "$HOME/.local/share/rofi/themes"
       $DRY_RUN_CMD find "$HOME/.local/share/hyde/rofi/themes" -type f -o -type l -exec ln -snf {} "$HOME/.local/share/rofi/themes/" \; 2>/dev/null || true
     '';
diff --git a/hydenix/modules/hm/screenshots.nix b/hydenix/modules/hm/screenshots.nix
index cf40635..8008118 100644
--- a/hydenix/modules/hm/screenshots.nix
+++ b/hydenix/modules/hm/screenshots.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.screenshots;
-in
-{
+in {
   options.hydenix.hm.screenshots = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/hm/shell.nix b/hydenix/modules/hm/shell.nix
index 1bca1e6..a25c2ca 100644
--- a/hydenix/modules/hm/shell.nix
+++ b/hydenix/modules/hm/shell.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.shell;
-in
-{
+in {
   options.hydenix.hm.shell = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -86,9 +83,7 @@ in
   };
 
   config = lib.mkIf cfg.enable {
-
-    home.packages =
-      with pkgs;
+    home.packages = with pkgs;
       [
         fastfetch
       ]
@@ -103,11 +98,11 @@ in
         zsh-autosuggestions
         zsh-syntax-highlighting
       ]
-      ++ lib.optionals cfg.bash.enable [ bash ]
-      ++ lib.optionals cfg.fish.enable [ fish ]
-      ++ lib.optionals cfg.pokego.enable [ pokego ]
-      ++ lib.optionals cfg.starship.enable [ starship ]
-      ++ lib.optionals cfg.p10k.enable [ zsh-powerlevel10k ];
+      ++ lib.optionals cfg.bash.enable [bash]
+      ++ lib.optionals cfg.fish.enable [fish]
+      ++ lib.optionals cfg.pokego.enable [pokego]
+      ++ lib.optionals cfg.starship.enable [starship]
+      ++ lib.optionals cfg.p10k.enable [zsh-powerlevel10k];
 
     programs.zsh = lib.mkIf cfg.zsh.enable {
       enable = true;
@@ -376,20 +371,13 @@ in
       })
       (lib.mkIf cfg.fish.enable {
         # Fish configs
-        ".config/fish/completions/hyde-shell.fish".source =
-          "${pkgs.hydenix.hyde}/Configs/.config/fish/completions/hyde-shell.fish";
-        ".config/fish/conf.d/hyde.fish".source =
-          "${pkgs.hydenix.hyde}/Configs/.config/fish/conf.d/hyde.fish";
-        ".config/fish/functions/bind_M_n_history.fish".source =
-          "${pkgs.hydenix.hyde}/Configs/.config/fish/functions/bind_M_n_history.fish";
-        ".config/fish/functions/fzf/ffcd.fish".source =
-          "${pkgs.hydenix.hyde}/Configs/.config/fish/functions/fzf/ffcd.fish";
-        ".config/fish/functions/fzf/ffch.fish".source =
-          "${pkgs.hydenix.hyde}/Configs/.config/fish/functions/fzf/ffch.fish";
-        ".config/fish/functions/fzf/ffec.fish".source =
-          "${pkgs.hydenix.hyde}/Configs/.config/fish/functions/fzf/ffec.fish";
-        ".config/fish/functions/fzf/ffe.fish".source =
-          "${pkgs.hydenix.hyde}/Configs/.config/fish/functions/fzf/ffe.fish";
+        ".config/fish/completions/hyde-shell.fish".source = "${pkgs.hydenix.hyde}/Configs/.config/fish/completions/hyde-shell.fish";
+        ".config/fish/conf.d/hyde.fish".source = "${pkgs.hydenix.hyde}/Configs/.config/fish/conf.d/hyde.fish";
+        ".config/fish/functions/bind_M_n_history.fish".source = "${pkgs.hydenix.hyde}/Configs/.config/fish/functions/bind_M_n_history.fish";
+        ".config/fish/functions/fzf/ffcd.fish".source = "${pkgs.hydenix.hyde}/Configs/.config/fish/functions/fzf/ffcd.fish";
+        ".config/fish/functions/fzf/ffch.fish".source = "${pkgs.hydenix.hyde}/Configs/.config/fish/functions/fzf/ffch.fish";
+        ".config/fish/functions/fzf/ffec.fish".source = "${pkgs.hydenix.hyde}/Configs/.config/fish/functions/fzf/ffec.fish";
+        ".config/fish/functions/fzf/ffe.fish".source = "${pkgs.hydenix.hyde}/Configs/.config/fish/functions/fzf/ffe.fish";
         ".config/fish/user.fish".source = "${pkgs.hydenix.hyde}/Configs/.config/fish/user.fish";
       })
 
@@ -401,10 +389,8 @@ in
       }
 
       (lib.mkIf cfg.starship.enable {
-        ".config/starship/powerline.toml".source =
-          "${pkgs.hydenix.hyde}/Configs/.config/starship/powerline.toml";
-        ".config/starship/starship.toml".source =
-          "${pkgs.hydenix.hyde}/Configs/.config/starship/starship.toml";
+        ".config/starship/powerline.toml".source = "${pkgs.hydenix.hyde}/Configs/.config/starship/powerline.toml";
+        ".config/starship/starship.toml".source = "${pkgs.hydenix.hyde}/Configs/.config/starship/starship.toml";
       })
     ];
   };
diff --git a/hydenix/modules/hm/social.nix b/hydenix/modules/hm/social.nix
index f5fd741..62b3285 100644
--- a/hydenix/modules/hm/social.nix
+++ b/hydenix/modules/hm/social.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.social;
-in
-{
+in {
   options.hydenix.hm.social = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/hm/spotify.nix b/hydenix/modules/hm/spotify.nix
index 5d6ba9a..1d7b269 100644
--- a/hydenix/modules/hm/spotify.nix
+++ b/hydenix/modules/hm/spotify.nix
@@ -7,8 +7,7 @@
 # TODO: add spicetify support using flatpak
 let
   cfg = config.hydenix.hm.spotify;
-in
-{
+in {
   options.hydenix.hm.spotify = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/hm/swww.nix b/hydenix/modules/hm/swww.nix
index fa5cd3b..6200152 100644
--- a/hydenix/modules/hm/swww.nix
+++ b/hydenix/modules/hm/swww.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.swww;
-in
-{
+in {
   options.hydenix.hm.swww = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/hm/terminals.nix b/hydenix/modules/hm/terminals.nix
index afe544b..ec94a5a 100644
--- a/hydenix/modules/hm/terminals.nix
+++ b/hydenix/modules/hm/terminals.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.terminals;
-in
-{
+in {
   options.hydenix.hm.terminals = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -39,16 +36,16 @@ in
       ".config/kitty/hyde.conf" = {
         source = "${pkgs.hydenix.hyde}/Configs/.config/kitty/hyde.conf";
       };
-      ".config/kitty/kitty.conf" = {
-        text = ''
-          include hyde.conf
+      # ".config/kitty/kitty.conf" = {
+      #   text = ''
+      #     include hyde.conf
 
-          # Add your custom configurations here
-          ${cfg.kitty.configText}
-        '';
-        force = true;
-        mutable = true;
-      };
+      #     # Add your custom configurations here
+      #     ${cfg.kitty.configText}
+      #   '';
+      #   force = true;
+      #   mutable = true;
+      # };
 
       # Kitty
       # stateful file for kitty wallbash
diff --git a/hydenix/modules/hm/theme.nix b/hydenix/modules/hm/theme.nix
index dd9cb30..c704553 100644
--- a/hydenix/modules/hm/theme.nix
+++ b/hydenix/modules/hm/theme.nix
@@ -3,9 +3,7 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.theme;
 
   # Helper function to find a theme package by name, returns null if not found
@@ -13,8 +11,7 @@ let
 
   # Filter out themes that don't have corresponding packages
   availableThemes = lib.filter (themeName: findThemeByName themeName != null) cfg.themes;
-in
-{
+in {
   options.hydenix.hm.theme = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -43,16 +40,16 @@ in
     home.packages = lib.filter (p: p != null) (map findThemeByName availableThemes);
 
     # walks through the themes and creates symlinks in the hyde themes directory
-    home.file =
-      let
-        # Find the package for each theme name, filtering out missing ones
-        themesList = lib.filter (t: t.pkg != null) (
-          map (themeName: {
-            name = themeName;
-            pkg = findThemeByName themeName;
-          }) availableThemes
-        );
-      in
+    home.file = let
+      # Find the package for each theme name, filtering out missing ones
+      themesList = lib.filter (t: t.pkg != null) (
+        map (themeName: {
+          name = themeName;
+          pkg = findThemeByName themeName;
+        })
+        availableThemes
+      );
+    in
       lib.mkMerge (
         map (theme: {
           ".config/hyde/themes/${theme.name}" = {
@@ -61,16 +58,16 @@ in
             recursive = true;
             mutable = true;
           };
-        }) themesList
+        })
+        themesList
       );
 
     # Add activation script to set the active theme
-    home.activation.setTheme = lib.hm.dag.entryAfter [ "mutableGeneration" ] ''
+    home.activation.setTheme = lib.hm.dag.entryAfter ["mutableGeneration"] ''
       # Define path with required tools
       export PATH="${
         lib.makeBinPath (
-          with pkgs;
-          [
+          with pkgs; [
             swww
             killall
             hyprland
diff --git a/hydenix/modules/hm/waybar.nix b/hydenix/modules/hm/waybar.nix
index 62fb2fe..4c6cdee 100644
--- a/hydenix/modules/hm/waybar.nix
+++ b/hydenix/modules/hm/waybar.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.waybar;
-in
-{
+in {
   options.hydenix.hm.waybar = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -38,20 +35,18 @@ in
   };
 
   config = lib.mkIf cfg.enable {
-    home.packages =
-      with pkgs;
+    home.packages = with pkgs;
       lib.optionals cfg.waybar.enable [
         waybar # system bar
         playerctl # media player cli
         gobject-introspection # for python packages
-        (python3.withPackages (ps: with ps; [ pygobject3 ])) # python with pygobject3
+        (python3.withPackages (ps: with ps; [pygobject3])) # python with pygobject3
         python-pyamdgpuinfo # AMD GPU information library
         lm_sensors # sensors information library
         power-profiles-daemon # power profiles daemon
       ];
 
     home.file = {
-
       # Modules for waybar
       # Note: some of these may not work for NixOS
       # TODO: review waybar modules for nix compatibility
@@ -225,7 +220,7 @@ in
           @import "theme.css";
 
           /* Users who want to override the current style add/edit 'user-style.css' */
-          @import "user-style.css";  
+          @import "user-style.css";
         '';
         force = true;
         mutable = true;
diff --git a/hydenix/modules/hm/wlogout.nix b/hydenix/modules/hm/wlogout.nix
index 0116131..60a6bc5 100644
--- a/hydenix/modules/hm/wlogout.nix
+++ b/hydenix/modules/hm/wlogout.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.wlogout;
-in
-{
+in {
   options.hydenix.hm.wlogout = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -27,13 +24,11 @@ in
 
   config = lib.mkIf cfg.enable {
     home.packages = with pkgs; [
-
       # wlogout
       (lib.mkIf cfg.wlogout.enable wlogout) # logout menu
     ];
 
     home.file = {
-
       # icons
       ".config/wlogout/icons/" = {
         source = "${pkgs.hydenix.hyde}/Configs/.config/wlogout/icons/";
@@ -61,7 +56,6 @@ in
         force = true;
         mutable = true;
       };
-
     };
   };
 }
diff --git a/hydenix/modules/hm/xdg.nix b/hydenix/modules/hm/xdg.nix
index b8683a2..87a98b1 100644
--- a/hydenix/modules/hm/xdg.nix
+++ b/hydenix/modules/hm/xdg.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hm.xdg;
-in
-{
+in {
   options.hydenix.hm.xdg = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -18,7 +15,6 @@ in
   };
 
   config = lib.mkIf cfg.enable {
-
     xdg = {
       enable = true;
 
diff --git a/hydenix/modules/system/audio.nix b/hydenix/modules/system/audio.nix
index 1398507..18f4e5b 100644
--- a/hydenix/modules/system/audio.nix
+++ b/hydenix/modules/system/audio.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.audio;
-in
-{
+in {
   options.hydenix.audio = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/system/boot.nix b/hydenix/modules/system/boot.nix
index 10d5653..f7a9130 100644
--- a/hydenix/modules/system/boot.nix
+++ b/hydenix/modules/system/boot.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.boot;
-in
-{
+in {
   options.hydenix.boot = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -48,32 +45,35 @@ in
     boot = {
       kernelPackages = cfg.kernelPackages;
       loader =
-        if cfg.useSystemdBoot then
-          {
-            # systemd-boot configuration
-            systemd-boot = {
-              enable = true;
-              consoleMode = "auto";
-              editor = false; # Disable the GRUB editor for security
-            };
-            efi.canTouchEfiVariables = true;
-          }
-        else
-          {
-            # GRUB configuration
-            grub = {
-              enable = true;
-              efiSupport = true;
-              device = "nodev";
-              useOSProber = true;
-              theme =
-                pkgs.hydenix.hyde
-                + "/share/grub/themes/"
-                + (if cfg.grubTheme == "Pochita" then "Pochita" else "Retroboot");
-              extraConfig = cfg.grubExtraConfig;
-            };
-            efi.canTouchEfiVariables = true;
+        if cfg.useSystemdBoot
+        then {
+          # systemd-boot configuration
+          systemd-boot = {
+            enable = true;
+            consoleMode = "auto";
+            editor = false; # Disable the GRUB editor for security
+          };
+          efi.canTouchEfiVariables = true;
+        }
+        else {
+          # GRUB configuration
+          grub = {
+            enable = true;
+            efiSupport = true;
+            device = "nodev";
+            useOSProber = true;
+            theme =
+              pkgs.hydenix.hyde
+              + "/share/grub/themes/"
+              + (
+                if cfg.grubTheme == "Pochita"
+                then "Pochita"
+                else "Retroboot"
+              );
+            extraConfig = cfg.grubExtraConfig;
           };
+          efi.canTouchEfiVariables = true;
+        };
     };
   };
 }
diff --git a/hydenix/modules/system/default.nix b/hydenix/modules/system/default.nix
index 8f0579b..45ac5fc 100644
--- a/hydenix/modules/system/default.nix
+++ b/hydenix/modules/system/default.nix
@@ -1,9 +1,10 @@
-{ lib, config, ... }:
-
-let
-  cfg = config.hydenix;
-in
 {
+  lib,
+  config,
+  ...
+}: let
+  cfg = config.hydenix;
+in {
   imports = [
     ./audio.nix
     ./boot.nix
diff --git a/hydenix/modules/system/gaming.nix b/hydenix/modules/system/gaming.nix
index b0e24fd..0a67669 100644
--- a/hydenix/modules/system/gaming.nix
+++ b/hydenix/modules/system/gaming.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.gaming;
-in
-{
+in {
   options.hydenix.gaming = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/system/hardware.nix b/hydenix/modules/system/hardware.nix
index 2105c64..e9adf45 100644
--- a/hydenix/modules/system/hardware.nix
+++ b/hydenix/modules/system/hardware.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.hardware;
-in
-{
+in {
   options.hydenix.hardware = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -19,7 +16,6 @@ in
 
   config = lib.mkIf cfg.enable {
     environment.systemPackages = with pkgs; [
-
       brightnessctl # screen brightness control
       udiskie # manage removable media
       ntfs3g # ntfs support
diff --git a/hydenix/modules/system/network.nix b/hydenix/modules/system/network.nix
index c137a34..f53ec69 100644
--- a/hydenix/modules/system/network.nix
+++ b/hydenix/modules/system/network.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.network;
-in
-{
+in {
   options.hydenix.network = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/system/nix.nix b/hydenix/modules/system/nix.nix
index e150e75..920bdde 100644
--- a/hydenix/modules/system/nix.nix
+++ b/hydenix/modules/system/nix.nix
@@ -2,12 +2,9 @@
   config,
   lib,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.nix;
-in
-{
+in {
   options.hydenix.nix = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/system/sddm.nix b/hydenix/modules/system/sddm.nix
index b9c7982..a6c8301 100644
--- a/hydenix/modules/system/sddm.nix
+++ b/hydenix/modules/system/sddm.nix
@@ -3,12 +3,9 @@
   lib,
   pkgs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.sddm;
-in
-{
+in {
   options.hydenix.sddm = {
     enable = lib.mkOption {
       type = lib.types.bool;
diff --git a/hydenix/modules/system/system.nix b/hydenix/modules/system/system.nix
index 14e69bc..e178011 100644
--- a/hydenix/modules/system/system.nix
+++ b/hydenix/modules/system/system.nix
@@ -4,12 +4,9 @@
   pkgs,
   inputs,
   ...
-}:
-
-let
+}: let
   cfg = config.hydenix.system;
-in
-{
+in {
   options.hydenix.system = {
     enable = lib.mkOption {
       type = lib.types.bool;
@@ -19,7 +16,6 @@ in
   };
 
   config = lib.mkIf cfg.enable {
-
     environment.systemPackages = with pkgs; [
       parallel # Shell tool for executing jobs in parallel
       jq # Command-line JSON processor
@@ -115,13 +111,13 @@ in
 
     # For polkit authentication
     security.polkit.enable = true;
-    security.pam.services.swaylock = { };
+    security.pam.services.swaylock = {};
     security.rtkit.enable = true;
     systemd.user.services.polkit-gnome-authentication-agent-1 = {
       description = "polkit-gnome-authentication-agent-1";
-      wantedBy = [ "graphical-session.target" ];
-      wants = [ "graphical-session.target" ];
-      after = [ "graphical-session.target" ];
+      wantedBy = ["graphical-session.target"];
+      wants = ["graphical-session.target"];
+      after = ["graphical-session.target"];
       serviceConfig = {
         Type = "simple";
         ExecStart = "${pkgs.polkit_gnome}/libexec/polkit-gnome-authentication-agent-1";
@@ -137,8 +133,7 @@ in
     # For proper XDG desktop integration
     xdg.portal = {
       enable = true;
-      extraPortals = [ pkgs.xdg-desktop-portal-gtk ];
+      extraPortals = [pkgs.xdg-desktop-portal-gtk];
     };
-
   };
 }
diff --git a/hydenix/sources/Bibata-Modern-Ice.nix b/hydenix/sources/Bibata-Modern-Ice.nix
index 83653b8..88c91b7 100644
--- a/hydenix/sources/Bibata-Modern-Ice.nix
+++ b/hydenix/sources/Bibata-Modern-Ice.nix
@@ -3,7 +3,6 @@
   stdenv,
   pkgs,
 }:
-
 stdenv.mkDerivation {
   pname = "Bibata-Modern-Ice";
   version = "1.0.0";
@@ -28,6 +27,6 @@ stdenv.mkDerivation {
     homepage = "https://github.com/HyDE-Project/HyDE";
     license = lib.licenses.gpl3;
     platforms = lib.platforms.all;
-    maintainers = [ ];
+    maintainers = [];
   };
 }
diff --git a/hydenix/sources/Tela-circle-dracula.nix b/hydenix/sources/Tela-circle-dracula.nix
index 2671927..b523cab 100644
--- a/hydenix/sources/Tela-circle-dracula.nix
+++ b/hydenix/sources/Tela-circle-dracula.nix
@@ -3,7 +3,6 @@
   stdenv,
   pkgs,
 }:
-
 stdenv.mkDerivation {
   pname = "Tela-dracula-icon-theme";
   version = "1.0.0"; # You may want to update this with a specific version
@@ -28,6 +27,6 @@ stdenv.mkDerivation {
     homepage = "https://github.com/HyDE-Project/hyde-themes";
     license = lib.licenses.gpl3; # You may need to verify the actual license
     platforms = lib.platforms.all;
-    maintainers = [ ];
+    maintainers = [];
   };
 }
diff --git a/hydenix/sources/hyde-gallery.nix b/hydenix/sources/hyde-gallery.nix
index 41e09b9..ff40d3c 100644
--- a/hydenix/sources/hyde-gallery.nix
+++ b/hydenix/sources/hyde-gallery.nix
@@ -1,5 +1,7 @@
-{ pkgs, lib }:
-
+{
+  pkgs,
+  lib,
+}:
 pkgs.stdenv.mkDerivation {
   name = "hyde-gallery";
 
diff --git a/hydenix/sources/hyde.nix b/hydenix/sources/hyde.nix
index 4d8a3b1..6480a6b 100644
--- a/hydenix/sources/hyde.nix
+++ b/hydenix/sources/hyde.nix
@@ -1,4 +1,7 @@
-{ pkgs, inputs }:
+{
+  pkgs,
+  inputs,
+}:
 pkgs.stdenv.mkDerivation {
   name = "hyde-modified";
   src = inputs.hyde;
diff --git a/hydenix/sources/overlay.nix b/hydenix/sources/overlay.nix
index bcf0dfc..03d7b38 100644
--- a/hydenix/sources/overlay.nix
+++ b/hydenix/sources/overlay.nix
@@ -1,21 +1,20 @@
-inputs: final: prev:
-let
+inputs: final: prev: let
   # Helper function to import a package
   callPackage = prev.lib.callPackageWith (prev // packages // inputs);
 
   # Define all packages
   packages = {
     # Hyde core packages
-    hyde-gallery = callPackage ./hyde-gallery.nix { };
+    hyde-gallery = callPackage ./hyde-gallery.nix {};
     # Additional packages
-    pokego = callPackage ./pokego.nix { };
-    python-pyamdgpuinfo = callPackage ./python-pyamdgpuinfo.nix { };
-    Tela-circle-dracula = callPackage ./Tela-circle-dracula.nix { };
-    Bibata-Modern-Ice = callPackage ./Bibata-Modern-Ice.nix { };
+    pokego = callPackage ./pokego.nix {};
+    python-pyamdgpuinfo = callPackage ./python-pyamdgpuinfo.nix {};
+    Tela-circle-dracula = callPackage ./Tela-circle-dracula.nix {};
+    Bibata-Modern-Ice = callPackage ./Bibata-Modern-Ice.nix {};
     hydenix = {
-      hyde = callPackage ./hyde.nix { inherit inputs; };
+      hyde = callPackage ./hyde.nix {inherit inputs;};
       # Theme packages from the themes directory
-      themes = callPackage ./themes/default.nix { };
+      themes = callPackage ./themes/default.nix {};
       hyq = inputs.hyq.packages.${prev.system}.default;
       hydectl = inputs.hydectl.packages.${prev.system}.default;
       hyde-ipc = inputs.hyde-ipc.packages.${prev.system}.default;
@@ -23,4 +22,4 @@ let
     };
   };
 in
-packages
+  packages
diff --git a/hydenix/sources/pokego.nix b/hydenix/sources/pokego.nix
index 735a231..c546208 100644
--- a/hydenix/sources/pokego.nix
+++ b/hydenix/sources/pokego.nix
@@ -3,7 +3,6 @@
   buildGoModule,
   fetchFromGitHub,
 }:
-
 buildGoModule rec {
   pname = "pokego";
   version = "0.3.0";
diff --git a/hydenix/sources/python-pyamdgpuinfo.nix b/hydenix/sources/python-pyamdgpuinfo.nix
index 2d7feaa..d9c2109 100644
--- a/hydenix/sources/python-pyamdgpuinfo.nix
+++ b/hydenix/sources/python-pyamdgpuinfo.nix
@@ -4,7 +4,6 @@
   fetchFromGitHub,
   libdrm,
 }:
-
 python3.pkgs.buildPythonPackage rec {
   pname = "pyamdgpuinfo";
   version = "v2.1.6";
@@ -30,7 +29,7 @@ python3.pkgs.buildPythonPackage rec {
 
   NIX_CFLAGS_COMPILE = "-I${libdrm.dev}/include/libdrm";
 
-  pythonImportsCheck = [ "pyamdgpuinfo" ];
+  pythonImportsCheck = ["pyamdgpuinfo"];
 
   meta = {
     description = "AMD GPU stats";
diff --git a/hydenix/sources/themes/AbyssGreen.nix b/hydenix/sources/themes/AbyssGreen.nix
index dc3545c..7c60fc4 100644
--- a/hydenix/sources/themes/AbyssGreen.nix
+++ b/hydenix/sources/themes/AbyssGreen.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "AbyssGreen";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Abyssal-Wave.nix b/hydenix/sources/themes/Abyssal-Wave.nix
index 351545a..154925b 100644
--- a/hydenix/sources/themes/Abyssal-Wave.nix
+++ b/hydenix/sources/themes/Abyssal-Wave.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Abyssal-Wave";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Amethyst-Aura.nix b/hydenix/sources/themes/Amethyst-Aura.nix
index 35f095f..5c317b8 100644
--- a/hydenix/sources/themes/Amethyst-Aura.nix
+++ b/hydenix/sources/themes/Amethyst-Aura.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Amethyst-Aura";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/AncientAliens.nix b/hydenix/sources/themes/AncientAliens.nix
index 7fab6b6..9c949c4 100644
--- a/hydenix/sources/themes/AncientAliens.nix
+++ b/hydenix/sources/themes/AncientAliens.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "AncientAliens";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Another-World.nix b/hydenix/sources/themes/Another-World.nix
index f670232..08552f3 100644
--- a/hydenix/sources/themes/Another-World.nix
+++ b/hydenix/sources/themes/Another-World.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Another World";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Bad-Blood.nix b/hydenix/sources/themes/Bad-Blood.nix
index 846bf4f..b6041b1 100644
--- a/hydenix/sources/themes/Bad-Blood.nix
+++ b/hydenix/sources/themes/Bad-Blood.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Bad Blood";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/BlueSky.nix b/hydenix/sources/themes/BlueSky.nix
index 998fa3e..d4911ee 100644
--- a/hydenix/sources/themes/BlueSky.nix
+++ b/hydenix/sources/themes/BlueSky.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "BlueSky";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Cat-Latte.nix b/hydenix/sources/themes/Cat-Latte.nix
index 4af39b8..636f69f 100644
--- a/hydenix/sources/themes/Cat-Latte.nix
+++ b/hydenix/sources/themes/Cat-Latte.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Cat Latte";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Catppuccin-Latte.nix b/hydenix/sources/themes/Catppuccin-Latte.nix
index 4c2f52a..053ef29 100644
--- a/hydenix/sources/themes/Catppuccin-Latte.nix
+++ b/hydenix/sources/themes/Catppuccin-Latte.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Catppuccin Latte";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Catppuccin-Mocha.nix b/hydenix/sources/themes/Catppuccin-Mocha.nix
index a1f1efa..a823369 100644
--- a/hydenix/sources/themes/Catppuccin-Mocha.nix
+++ b/hydenix/sources/themes/Catppuccin-Mocha.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Catppuccin Mocha";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Code-Garden.nix b/hydenix/sources/themes/Code-Garden.nix
index e9f5bbc..22ed991 100644
--- a/hydenix/sources/themes/Code-Garden.nix
+++ b/hydenix/sources/themes/Code-Garden.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Code Garden";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Cosmic-Blue.nix b/hydenix/sources/themes/Cosmic-Blue.nix
index cd5f732..15d37d0 100644
--- a/hydenix/sources/themes/Cosmic-Blue.nix
+++ b/hydenix/sources/themes/Cosmic-Blue.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Cosmic Blue";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Crimson-Blade.nix b/hydenix/sources/themes/Crimson-Blade.nix
index f4cd3cd..a68e108 100644
--- a/hydenix/sources/themes/Crimson-Blade.nix
+++ b/hydenix/sources/themes/Crimson-Blade.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Crimson Blade";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Crimson-Blue.nix b/hydenix/sources/themes/Crimson-Blue.nix
index e4b638d..df336cb 100644
--- a/hydenix/sources/themes/Crimson-Blue.nix
+++ b/hydenix/sources/themes/Crimson-Blue.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Crimson-Blue";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Decay-Green.nix b/hydenix/sources/themes/Decay-Green.nix
index 2c41d09..8553b32 100644
--- a/hydenix/sources/themes/Decay-Green.nix
+++ b/hydenix/sources/themes/Decay-Green.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Decay Green";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/DoomBringers.nix b/hydenix/sources/themes/DoomBringers.nix
index 39d30f8..9526f9c 100644
--- a/hydenix/sources/themes/DoomBringers.nix
+++ b/hydenix/sources/themes/DoomBringers.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "DoomBringers";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Dracula.nix b/hydenix/sources/themes/Dracula.nix
index 7aa8cb9..5f2a53c 100644
--- a/hydenix/sources/themes/Dracula.nix
+++ b/hydenix/sources/themes/Dracula.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Dracula";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Edge-Runner.nix b/hydenix/sources/themes/Edge-Runner.nix
index e60af52..f548cbb 100644
--- a/hydenix/sources/themes/Edge-Runner.nix
+++ b/hydenix/sources/themes/Edge-Runner.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Edge Runner";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Electra.nix b/hydenix/sources/themes/Electra.nix
index 7ccf0df..9f55a7e 100644
--- a/hydenix/sources/themes/Electra.nix
+++ b/hydenix/sources/themes/Electra.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Electra";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Eternal-Arctic.nix b/hydenix/sources/themes/Eternal-Arctic.nix
index 0fa11e6..a66b1d1 100644
--- a/hydenix/sources/themes/Eternal-Arctic.nix
+++ b/hydenix/sources/themes/Eternal-Arctic.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Eternal Arctic";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Ever-Blushing.nix b/hydenix/sources/themes/Ever-Blushing.nix
index ec72443..be442d4 100644
--- a/hydenix/sources/themes/Ever-Blushing.nix
+++ b/hydenix/sources/themes/Ever-Blushing.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Ever Blushing";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Frosted-Glass.nix b/hydenix/sources/themes/Frosted-Glass.nix
index 48857c1..a24f7a4 100644
--- a/hydenix/sources/themes/Frosted-Glass.nix
+++ b/hydenix/sources/themes/Frosted-Glass.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Frosted Glass";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Graphite-Mono.nix b/hydenix/sources/themes/Graphite-Mono.nix
index 0ce4afa..d3043ee 100644
--- a/hydenix/sources/themes/Graphite-Mono.nix
+++ b/hydenix/sources/themes/Graphite-Mono.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Graphite Mono";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Green-Lush.nix b/hydenix/sources/themes/Green-Lush.nix
index 2e7f336..d9b010c 100644
--- a/hydenix/sources/themes/Green-Lush.nix
+++ b/hydenix/sources/themes/Green-Lush.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Green Lush";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Greenify.nix b/hydenix/sources/themes/Greenify.nix
index a115928..4caee2a 100644
--- a/hydenix/sources/themes/Greenify.nix
+++ b/hydenix/sources/themes/Greenify.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Greenify";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Grukai.nix b/hydenix/sources/themes/Grukai.nix
index f969cba..98eface 100644
--- a/hydenix/sources/themes/Grukai.nix
+++ b/hydenix/sources/themes/Grukai.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Grukai";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Gruvbox-Retro.nix b/hydenix/sources/themes/Gruvbox-Retro.nix
index c3184a1..3abd037 100644
--- a/hydenix/sources/themes/Gruvbox-Retro.nix
+++ b/hydenix/sources/themes/Gruvbox-Retro.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Gruvbox Retro";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Hack-the-Box.nix b/hydenix/sources/themes/Hack-the-Box.nix
index efc08b8..1c46fc3 100644
--- a/hydenix/sources/themes/Hack-the-Box.nix
+++ b/hydenix/sources/themes/Hack-the-Box.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Hack the Box";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Ice-Age.nix b/hydenix/sources/themes/Ice-Age.nix
index 6cebeb0..57945c5 100644
--- a/hydenix/sources/themes/Ice-Age.nix
+++ b/hydenix/sources/themes/Ice-Age.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Ice Age";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/LimeFrenzy.nix b/hydenix/sources/themes/LimeFrenzy.nix
index 6fdbfb4..3673c29 100644
--- a/hydenix/sources/themes/LimeFrenzy.nix
+++ b/hydenix/sources/themes/LimeFrenzy.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "LimeFrenzy";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Mac-OS.nix b/hydenix/sources/themes/Mac-OS.nix
index cdfcf70..47000b1 100644
--- a/hydenix/sources/themes/Mac-OS.nix
+++ b/hydenix/sources/themes/Mac-OS.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Mac OS";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Material-Sakura.nix b/hydenix/sources/themes/Material-Sakura.nix
index 81790ba..bf4107f 100644
--- a/hydenix/sources/themes/Material-Sakura.nix
+++ b/hydenix/sources/themes/Material-Sakura.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Material Sakura";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Monokai.nix b/hydenix/sources/themes/Monokai.nix
index cd35dbb..34eeb35 100644
--- a/hydenix/sources/themes/Monokai.nix
+++ b/hydenix/sources/themes/Monokai.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Monokai";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Monterey-Frost.nix b/hydenix/sources/themes/Monterey-Frost.nix
index 9b84f85..f3e5cda 100644
--- a/hydenix/sources/themes/Monterey-Frost.nix
+++ b/hydenix/sources/themes/Monterey-Frost.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Monterey Frost";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Moonlight.nix b/hydenix/sources/themes/Moonlight.nix
index 43d177e..7373f3d 100644
--- a/hydenix/sources/themes/Moonlight.nix
+++ b/hydenix/sources/themes/Moonlight.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Moonlight";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Nightbrew.nix b/hydenix/sources/themes/Nightbrew.nix
index 621960b..a0e1b3c 100644
--- a/hydenix/sources/themes/Nightbrew.nix
+++ b/hydenix/sources/themes/Nightbrew.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Nightbrew";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Nordic-Blue.nix b/hydenix/sources/themes/Nordic-Blue.nix
index f4555ad..7aa2423 100644
--- a/hydenix/sources/themes/Nordic-Blue.nix
+++ b/hydenix/sources/themes/Nordic-Blue.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Nordic Blue";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Obsidian-Purple.nix b/hydenix/sources/themes/Obsidian-Purple.nix
index 7cc1583..d173b16 100644
--- a/hydenix/sources/themes/Obsidian-Purple.nix
+++ b/hydenix/sources/themes/Obsidian-Purple.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Obsidian-Purple";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/One-Dark.nix b/hydenix/sources/themes/One-Dark.nix
index 87e6e4f..aa7a2ec 100644
--- a/hydenix/sources/themes/One-Dark.nix
+++ b/hydenix/sources/themes/One-Dark.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "One Dark";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Oxo-Carbon.nix b/hydenix/sources/themes/Oxo-Carbon.nix
index d3ea253..d23e036 100644
--- a/hydenix/sources/themes/Oxo-Carbon.nix
+++ b/hydenix/sources/themes/Oxo-Carbon.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Oxo Carbon";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Paranoid-Sweet.nix b/hydenix/sources/themes/Paranoid-Sweet.nix
index 93be296..054633b 100644
--- a/hydenix/sources/themes/Paranoid-Sweet.nix
+++ b/hydenix/sources/themes/Paranoid-Sweet.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Paranoid Sweet";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Peace-Of-Mind.nix b/hydenix/sources/themes/Peace-Of-Mind.nix
index 94c66ec..b1c82d7 100644
--- a/hydenix/sources/themes/Peace-Of-Mind.nix
+++ b/hydenix/sources/themes/Peace-Of-Mind.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Peace Of Mind";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Pixel-Dream.nix b/hydenix/sources/themes/Pixel-Dream.nix
index bbcfb1a..605268c 100644
--- a/hydenix/sources/themes/Pixel-Dream.nix
+++ b/hydenix/sources/themes/Pixel-Dream.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Pixel Dream";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Rain-Dark.nix b/hydenix/sources/themes/Rain-Dark.nix
index 042fa5a..9046850 100644
--- a/hydenix/sources/themes/Rain-Dark.nix
+++ b/hydenix/sources/themes/Rain-Dark.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Rain Dark";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Red-Stone.nix b/hydenix/sources/themes/Red-Stone.nix
index f94e3f4..84acea2 100644
--- a/hydenix/sources/themes/Red-Stone.nix
+++ b/hydenix/sources/themes/Red-Stone.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Red Stone";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Rose-Pine.nix b/hydenix/sources/themes/Rose-Pine.nix
index d5f78a6..4cc4a5b 100644
--- a/hydenix/sources/themes/Rose-Pine.nix
+++ b/hydenix/sources/themes/Rose-Pine.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Rosé Pine";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Scarlet-Night.nix b/hydenix/sources/themes/Scarlet-Night.nix
index 88a1a47..2920aa7 100644
--- a/hydenix/sources/themes/Scarlet-Night.nix
+++ b/hydenix/sources/themes/Scarlet-Night.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Scarlet Night";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Sci-fi.nix b/hydenix/sources/themes/Sci-fi.nix
index 1d86842..44a292e 100644
--- a/hydenix/sources/themes/Sci-fi.nix
+++ b/hydenix/sources/themes/Sci-fi.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Sci-fi";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Solarized-Dark.nix b/hydenix/sources/themes/Solarized-Dark.nix
index 84f36a2..2ee579f 100644
--- a/hydenix/sources/themes/Solarized-Dark.nix
+++ b/hydenix/sources/themes/Solarized-Dark.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Solarized Dark";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Synth-Wave.nix b/hydenix/sources/themes/Synth-Wave.nix
index 6c6e328..3594784 100644
--- a/hydenix/sources/themes/Synth-Wave.nix
+++ b/hydenix/sources/themes/Synth-Wave.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Synth Wave";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Tokyo-Night.nix b/hydenix/sources/themes/Tokyo-Night.nix
index 30c5ade..9631274 100644
--- a/hydenix/sources/themes/Tokyo-Night.nix
+++ b/hydenix/sources/themes/Tokyo-Night.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Tokyo Night";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Tundra.nix b/hydenix/sources/themes/Tundra.nix
index 61e3a74..fe5803e 100644
--- a/hydenix/sources/themes/Tundra.nix
+++ b/hydenix/sources/themes/Tundra.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Tundra";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Vanta-Black.nix b/hydenix/sources/themes/Vanta-Black.nix
index d088956..2c9b9f4 100644
--- a/hydenix/sources/themes/Vanta-Black.nix
+++ b/hydenix/sources/themes/Vanta-Black.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Vanta Black";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/Windows-11.nix b/hydenix/sources/themes/Windows-11.nix
index 9a77d67..d48adb6 100644
--- a/hydenix/sources/themes/Windows-11.nix
+++ b/hydenix/sources/themes/Windows-11.nix
@@ -1,4 +1,7 @@
-{ pkgs, mkTheme }:
+{
+  pkgs,
+  mkTheme,
+}:
 mkTheme rec {
   name = "Windows 11";
   src = pkgs.fetchFromGitHub {
diff --git a/hydenix/sources/themes/default.nix b/hydenix/sources/themes/default.nix
index 28bebd6..41213e1 100644
--- a/hydenix/sources/themes/default.nix
+++ b/hydenix/sources/themes/default.nix
@@ -1,10 +1,8 @@
-{ pkgs }:
-let
-  mkTheme = import ./utils/mkTheme.nix { inherit pkgs; };
+{pkgs}: let
+  mkTheme = import ./utils/mkTheme.nix {inherit pkgs;};
   # Helper function to call each theme file with pkgs and mkTheme
-  callTheme = file: import file { inherit pkgs mkTheme; };
-in
-{
+  callTheme = file: import file {inherit pkgs mkTheme;};
+in {
   "Abyssal-Wave" = callTheme ./Abyssal-Wave.nix;
   "AbyssGreen" = callTheme ./AbyssGreen.nix;
   "AncientAliens" = callTheme ./AncientAliens.nix;
diff --git a/hydenix/sources/themes/utils/mkTheme.nix b/hydenix/sources/themes/utils/mkTheme.nix
index b233fca..feca37d 100644
--- a/hydenix/sources/themes/utils/mkTheme.nix
+++ b/hydenix/sources/themes/utils/mkTheme.nix
@@ -1,11 +1,8 @@
-{ pkgs }:
-{
+{pkgs}: {
   name,
   src,
   meta,
-}:
-let
-
+}: let
   # Helper function to find the first directory in a path
   findFirstDir = ''
     findFirstDir() {
@@ -65,10 +62,10 @@ let
         if [ -f "$icon_archive" ]; then
           echo "Installing icon theme from: $icon_archive"
           tar -xf "$icon_archive" --skip-old-files -C $out/share/icons
-          
+
           ICON_DIR=$(findFirstDir $out/share/icons)
           echo "Icon directory: $ICON_DIR"
-          
+
           # Only process broken symlinks if the icon directory exists
           if [ -n "$ICON_DIR" ] && [ -d "$out/share/icons/$ICON_DIR" ]; then
             # Fix broken symlinks in icon theme - limit to a reasonable depth
@@ -78,7 +75,7 @@ let
                 # Skip absolute links
                 continue
               fi
-              
+
               target_path="$(dirname "$link")/$target"
               if [ ! -e "$target_path" ]; then
                 rm "$link"
@@ -117,6 +114,5 @@ let
       platforms = platforms.all;
     };
   };
-
 in
-pkg
+  pkg
diff --git a/lib/config/configuration.nix b/lib/config/configuration.nix
index 015c071..ea3968a 100644
--- a/lib/config/configuration.nix
+++ b/lib/config/configuration.nix
@@ -1,8 +1,4 @@
-{
-  inputs,
-  ...
-}:
-let
+{inputs, ...}: let
   hydenix-pkgs = import inputs.hydenix-nixpkgs {
     inherit (inputs.lib) system;
     config.allowUnfree = true;
@@ -10,9 +6,7 @@ let
       inputs.lib.overlays
     ];
   };
-in
-{
-
+in {
   nixpkgs.pkgs = hydenix-pkgs;
 
   imports = [
@@ -22,7 +16,6 @@ in
     inputs.nixos-hardware.nixosModules.common-cpu-intel
     inputs.nixos-hardware.nixosModules.common-pc
     inputs.nixos-hardware.nixosModules.common-pc-ssd
-
   ];
 
   home-manager = {
@@ -32,17 +25,15 @@ in
       inherit inputs;
     };
 
-    users."hydenix" =
-      { ... }:
-      {
-        imports = [
-          inputs.lib.homeModules
-          ./home.nix
+    users."hydenix" = {...}: {
+      imports = [
+        inputs.lib.homeModules
+        ./home.nix
 
-          # Nix-index-database - for comma and command-not-found
-          inputs.nix-index-database.homeModules.nix-index
-        ];
-      };
+        # Nix-index-database - for comma and command-not-found
+        inputs.nix-index-database.homeModules.nix-index
+      ];
+    };
   };
 
   hydenix = {
diff --git a/lib/config/default.nix b/lib/config/default.nix
index 5e16104..ce5e8d1 100644
--- a/lib/config/default.nix
+++ b/lib/config/default.nix
@@ -1,8 +1,4 @@
-{
-  inputs,
-  ...
-}:
-
+{inputs, ...}:
 inputs.hydenix-nixpkgs.lib.nixosSystem {
   system = "x86_64-linux";
   specialArgs = {
diff --git a/lib/config/home.nix b/lib/config/home.nix
index ff93137..8c38b0b 100644
--- a/lib/config/home.nix
+++ b/lib/config/home.nix
@@ -1,6 +1,4 @@
-{ ... }:
-{
-
+{...}: {
   hydenix.hm = {
     enable = true;
 
@@ -62,7 +60,6 @@
         "Cosmic Blue"
         "DoomBringers"
         "Eternal Arctic"
-        "Ever Blushing"
         "Moonlight"
 
         # Testing that we can add a new string and it won't fail
diff --git a/lib/dev-shell.nix b/lib/dev-shell.nix
index 08e779f..4a8c2da 100644
--- a/lib/dev-shell.nix
+++ b/lib/dev-shell.nix
@@ -1,65 +1,63 @@
-{ inputs }:
-
-let
+{inputs}: let
   system = "x86_64-linux";
   pkgs = import inputs.hydenix-nixpkgs {
     inherit system;
     config.allowUnfree = true;
   };
 in
-pkgs.mkShell {
-  buildInputs = with pkgs; [
-    nodejs
-    commitlint
-    direnv
-    nix-direnv
-  ];
-
-  shellHook = ''
-    export USE_DIRENV=1
-
-    # Set up git hooks directory
-    git config core.hooksPath .git-hooks
-
-    # Ensure .git-hooks directory exists
-    mkdir -p .git-hooks
-
-    # Create commit-msg hook
-    cat > .git-hooks/commit-msg <<'EOF'
-    #!/usr/bin/env sh
-    ${pkgs.commitlint}/bin/commitlint --edit "$1"
-    EOF
-
-    # Create pre-push hook
-    cat > .git-hooks/pre-push <<'EOF'
-    #!/usr/bin/env sh
-    echo "Running pre-push checks..."
-
-    echo "Running nix flake check..."
-    nix flake check
-    if [ $? -ne 0 ]; then
-      echo "Error: nix flake check failed"
-      exit 1
-    fi
-
-    echo "Running template flake check..."
-    cd template
-    sed -i 's|url = "github:richen604/hydenix"|url = "path:../"|' flake.nix
-    nix flake check
-    if [ $? -ne 0 ]; then
-      echo "Error: template flake check failed"
+  pkgs.mkShell {
+    buildInputs = with pkgs; [
+      nodejs
+      commitlint
+      direnv
+      nix-direnv
+    ];
+
+    shellHook = ''
+      export USE_DIRENV=1
+
+      # Set up git hooks directory
+      git config core.hooksPath .git-hooks
+
+      # Ensure .git-hooks directory exists
+      mkdir -p .git-hooks
+
+      # Create commit-msg hook
+      cat > .git-hooks/commit-msg <<'EOF'
+      #!/usr/bin/env sh
+      ${pkgs.commitlint}/bin/commitlint --edit "$1"
+      EOF
+
+      # Create pre-push hook
+      cat > .git-hooks/pre-push <<'EOF'
+      #!/usr/bin/env sh
+      echo "Running pre-push checks..."
+
+      echo "Running nix flake check..."
+      nix flake check
+      if [ $? -ne 0 ]; then
+        echo "Error: nix flake check failed"
+        exit 1
+      fi
+
+      echo "Running template flake check..."
+      cd template
+      sed -i 's|url = "github:richen604/hydenix"|url = "path:../"|' flake.nix
+      nix flake check
+      if [ $? -ne 0 ]; then
+        echo "Error: template flake check failed"
+        git checkout flake.nix
+        rm -f flake.lock
+        exit 1
+      fi
       git checkout flake.nix
       rm -f flake.lock
-      exit 1
-    fi
-    git checkout flake.nix
-    rm -f flake.lock
-    git rm flake.lock
-    cd ..
-    EOF
-
-    # Make hooks executable
-    chmod +x .git-hooks/commit-msg
-    chmod +x .git-hooks/pre-push
-  '';
-}
+      git rm flake.lock
+      cd ..
+      EOF
+
+      # Make hooks executable
+      chmod +x .git-hooks/commit-msg
+      chmod +x .git-hooks/pre-push
+    '';
+  }
diff --git a/lib/hyde-update/default.nix b/lib/hyde-update/default.nix
index 507f59a..5244572 100644
--- a/lib/hyde-update/default.nix
+++ b/lib/hyde-update/default.nix
@@ -1,8 +1,4 @@
-{
-  inputs,
-}:
-
-let
+{inputs}: let
   system = "x86_64-linux";
   pkgs = import inputs.hydenix-nixpkgs {
     inherit system;
@@ -10,13 +6,14 @@ let
   };
 
   # Function to create Hyde package with specific source
-  mkHyde =
-    src:
+  mkHyde = src:
     import ../../hydenix/sources/hyde.nix {
       inherit pkgs;
-      inputs = inputs // {
-        hyde = src;
-      };
+      inputs =
+        inputs
+        // {
+          hyde = src;
+        };
     };
 
   # Current pinned Hyde version
@@ -32,16 +29,16 @@ let
     }
   );
 in
-pkgs.writeShellApplication {
-  name = "hyde-update";
-  runtimeInputs = with pkgs; [
-    coreutils
-    diffutils
-  ];
-  # Pass the built packages to the script
-  text = ''
-    export HYDE_PINNED="${hyde-pinned}"
-    export HYDE_MASTER="${hyde-master}"
-    ${builtins.readFile ./run.sh}
-  '';
-}
+  pkgs.writeShellApplication {
+    name = "hyde-update";
+    runtimeInputs = with pkgs; [
+      coreutils
+      diffutils
+    ];
+    # Pass the built packages to the script
+    text = ''
+      export HYDE_PINNED="${hyde-pinned}"
+      export HYDE_MASTER="${hyde-master}"
+      ${builtins.readFile ./run.sh}
+    '';
+  }
diff --git a/lib/vms/demo-vm.nix b/lib/vms/demo-vm.nix
index 48ee86b..27cc5db 100644
--- a/lib/vms/demo-vm.nix
+++ b/lib/vms/demo-vm.nix
@@ -1,10 +1,13 @@
-{ inputs, ... }:
+{inputs, ...}:
 inputs.hydenix-nixpkgs.lib.nixosSystem {
   system = "x86_64-linux";
   modules = [
     (
-      { config, pkgs, ... }:
       {
+        config,
+        pkgs,
+        ...
+      }: {
         virtualisation.vmVariant = {
           virtualisation.forwardPorts = [
             {
@@ -29,13 +32,13 @@ inputs.hydenix-nixpkgs.lib.nixosSystem {
             };
           };
           services.xserver = {
-            videoDrivers = [ "virtio" ];
+            videoDrivers = ["virtio"];
           };
 
           # Console font for readable CLI recordings at 1440p (2K)
           console = {
             earlySetup = true;
-            packages = [ pkgs.terminus_font ];
+            packages = [pkgs.terminus_font];
             font = "ter-v32b";
           };
 
diff --git a/lib/vms/nixos-vm.nix b/lib/vms/nixos-vm.nix
index 333119c..233e98d 100644
--- a/lib/vms/nixos-vm.nix
+++ b/lib/vms/nixos-vm.nix
@@ -1,9 +1,16 @@
-{ inputs, nixosConfiguration, ... }:
+{
+  inputs,
+  nixosConfiguration,
+  ...
+}:
 nixosConfiguration.extendModules {
   modules = [
     (
-      { config, pkgs, ... }:
       {
+        config,
+        pkgs,
+        ...
+      }: {
         virtualisation.vmVariant = {
           virtualisation.forwardPorts = [
             {
diff --git a/template/configuration.nix b/template/configuration.nix
index a7455d4..5eb9fb2 100644
--- a/template/configuration.nix
+++ b/template/configuration.nix
@@ -1,8 +1,4 @@
-{
-  inputs,
-  ...
-}:
-let
+{inputs, ...}: let
   # Package configuration - sets up package system with proper overlays
   # Most users won't need to modify this section
   pkgs = import inputs.hydenix.inputs.hydenix-nixpkgs {
@@ -17,8 +13,7 @@ let
       })
     ];
   };
-in
-{
+in {
   nixpkgs.pkgs = pkgs; # Set pkgs for hydenix globally
 
   imports = [
@@ -60,18 +55,16 @@ in
   home-manager = {
     useGlobalPkgs = true;
     useUserPackages = true;
-    extraSpecialArgs = { inherit inputs; };
+    extraSpecialArgs = {inherit inputs;};
     # User Configuration - REQUIRED: Change "hydenix" to your actual username
     # This must match the username you define in users.users below
-    users."hydenix" =
-      { ... }:
-      {
-        imports = [
-          inputs.hydenix.lib.homeModules
-          inputs.nix-index-database.hmModules.nix-index # Command-not-found and comma tool support
-          ./modules/hm # Your custom home-manager modules (configure hydenix.hm here!)
-        ];
-      };
+    users."hydenix" = {...}: {
+      imports = [
+        inputs.hydenix.lib.homeModules
+        inputs.nix-index-database.hmModules.nix-index # Command-not-found and comma tool support
+        ./modules/hm # Your custom home-manager modules (configure hydenix.hm here!)
+      ];
+    };
   };
 
   # User Account Setup - REQUIRED: Change "hydenix" to your desired username (must match above)
diff --git a/template/flake.nix b/template/flake.nix
index 125f1e9..8cceb1b 100644
--- a/template/flake.nix
+++ b/template/flake.nix
@@ -22,21 +22,17 @@
     };
   };
 
-  outputs =
-    { ... }@inputs:
-    let
-      hydenixConfig = inputs.hydenix.inputs.hydenix-nixpkgs.lib.nixosSystem {
-        inherit (inputs.hydenix.lib) system;
-        specialArgs = {
-          inherit inputs;
-        };
-        modules = [
-          ./configuration.nix
-        ];
+  outputs = {...} @ inputs: let
+    hydenixConfig = inputs.hydenix.inputs.hydenix-nixpkgs.lib.nixosSystem {
+      inherit (inputs.hydenix.lib) system;
+      specialArgs = {
+        inherit inputs;
       };
-
-    in
-    {
-      nixosConfigurations.hydenix = hydenixConfig;
+      modules = [
+        ./configuration.nix
+      ];
     };
+  in {
+    nixosConfigurations.hydenix = hydenixConfig;
+  };
 }
diff --git a/template/modules/hm/default.nix b/template/modules/hm/default.nix
index ec4ce80..336dc17 100644
--- a/template/modules/hm/default.nix
+++ b/template/modules/hm/default.nix
@@ -1,6 +1,4 @@
-{ ... }:
-
-{
+{...}: {
   imports = [
     # ./example.nix - add your modules here
   ];
diff --git a/template/modules/system/default.nix b/template/modules/system/default.nix
index f5f885e..331e2e5 100644
--- a/template/modules/system/default.nix
+++ b/template/modules/system/default.nix
@@ -1,6 +1,4 @@
-{ ... }:
-
-{
+{...}: {
   imports = [
     # ./example.nix - add your modules here
   ];
-- 
2.50.1

